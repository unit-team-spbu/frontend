[{"D:\\Documents\\Desktop\\final project\\frontend\\src\\index.js":"1","D:\\Documents\\Desktop\\final project\\frontend\\src\\serviceWorker.js":"2","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\App.js":"3","D:\\Documents\\Desktop\\final project\\frontend\\src\\reducers\\index.js":"4","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Login.js":"5","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Anketa.js":"6","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Signup.js":"7","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\index.js":"8","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\index.js":"9","D:\\Documents\\Desktop\\final project\\frontend\\src\\reducers\\FileReducer.js":"10","D:\\Documents\\Desktop\\final project\\frontend\\src\\reducers\\userReducer.js":"11","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Copyright.js":"12","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Blog.js":"13","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Blogs.js":"14","D:\\Documents\\Desktop\\final project\\frontend\\src\\API\\userAPI.js":"15","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Header.js":"16","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Events.js":"17","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Event.js":"18","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Headers.js":"19","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\cardevent.js":"20","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\text.js":"21","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Sidebar.js":"22","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Main.js":"23","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\MainFeaturedPost.js":"24","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Main.js":"25","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Sidebar.js":"26","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Markdown.js":"27","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Markdown.js":"28","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\MainFeaturedPost.js":"29","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Anketaf.js":"30"},{"size":392,"mtime":1606951205345,"results":"31","hashOfConfig":"32"},{"size":5227,"mtime":1606951205348,"results":"33","hashOfConfig":"32"},{"size":797,"mtime":1607466478787,"results":"34","hashOfConfig":"32"},{"size":537,"mtime":1606951205346,"results":"35","hashOfConfig":"32"},{"size":6310,"mtime":1606955223277,"results":"36","hashOfConfig":"32"},{"size":29690,"mtime":1607515359317,"results":"37","hashOfConfig":"32"},{"size":6847,"mtime":1606953711625,"results":"38","hashOfConfig":"32"},{"size":580,"mtime":1606958770140,"results":"39","hashOfConfig":"32"},{"size":816,"mtime":1607513910552,"results":"40","hashOfConfig":"32"},{"size":230,"mtime":1606951205346,"results":"41","hashOfConfig":"32"},{"size":10672,"mtime":1607622364513,"results":"42","hashOfConfig":"32"},{"size":465,"mtime":1606951204221,"results":"43","hashOfConfig":"32"},{"size":4252,"mtime":1607459853508,"results":"44","hashOfConfig":"32"},{"size":1942,"mtime":1607461426604,"results":"45","hashOfConfig":"32"},{"size":1396,"mtime":1606958015288,"results":"46","hashOfConfig":"32"},{"size":3108,"mtime":1607463674307,"results":"47","hashOfConfig":"32"},{"size":1764,"mtime":1606951204732,"results":"48","hashOfConfig":"32"},{"size":1687,"mtime":1606960709218,"results":"49","hashOfConfig":"32"},{"size":3537,"mtime":1607463594237,"results":"50","hashOfConfig":"32"},{"size":3877,"mtime":1607458320955,"results":"51","hashOfConfig":"32"},{"size":3070,"mtime":1606951204727,"results":"52","hashOfConfig":"32"},{"size":4499,"mtime":1607513865537,"results":"53","hashOfConfig":"32"},{"size":816,"mtime":1606951204542,"results":"54","hashOfConfig":"32"},{"size":3141,"mtime":1606951204543,"results":"55","hashOfConfig":"32"},{"size":872,"mtime":1606951204733,"results":"56","hashOfConfig":"32"},{"size":8707,"mtime":1606955433073,"results":"57","hashOfConfig":"32"},{"size":1198,"mtime":1606951204543,"results":"58","hashOfConfig":"32"},{"size":1198,"mtime":1606951204735,"results":"59","hashOfConfig":"32"},{"size":2580,"mtime":1606951204735,"results":"60","hashOfConfig":"32"},{"size":880,"mtime":1607621667203,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"c1xnbp",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"65"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Desktop\\final project\\frontend\\src\\index.js",["139"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./reducers\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n   \r\n    document.getElementById('root')\r\n );\r\n\r\n\r\n\r\n//serviceWorker.unregister();\r\n",["140","141"],"D:\\Documents\\Desktop\\final project\\frontend\\src\\serviceWorker.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\App.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\reducers\\index.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Login.js",["142","143","144"],"import React from 'react';\r\n\r\n//import { Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Copyright from './Copyright';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setAuthorization} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { LinkOffSharp } from '@material-ui/icons';\r\nimport setAuth from './../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random/?programming,it)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    \r\n    //marginTop: theme.spacing(1),\r\n    //display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n   \r\n  },\r\n}));\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n \r\n  /*if (values.firstName.length > 12) {\r\n    errors.firstName = 'Максимальная длина 12'\r\n  }*/\r\n  /*if (values.lastName.length > 15) {\r\n    errors.lastName = 'Максимальная длина 15'\r\n  }*/\r\n  if (\r\n    values.login &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n  ) {\r\n    errors.login = 'Неверный адрес почты'\r\n  }\r\n  \r\n  /*if (values.password.length < 8) {\r\n    errors.firstName = 'Минимальная длина 8'\r\n  }*/\r\n\r\n /* const beginWithoutDigit = /^\\D.*$/\r\n  const withoutSpecialChars = /^[^-() /]*$/\r\n  const containsLetters = /^.*[a-zA-Z]+.*$/\r\n  const withoutSpaces = /^[\\S]$/\r\n\r\nif( beginWithoutDigit.test(values.password) &&\r\n    withoutSpecialChars.test(values.password) &&\r\n    containsLetters.test(values.password) ){\r\n} else {\r\n    errors.login = 'Необходимо наличие: цифор,спец.символов и латинских букв'\r\n}\r\n\r\nif( withoutSpaces.test(values.password)){\r\n} else {\r\n    errors.login = 'Пробелы недопустимы'\r\n}\r\n*/\r\n\r\n  return errors\r\n}\r\n\r\n   const renderTextField = ({\r\n      label, input, \r\n      meta:{ touched, invalid, error},\r\n        ...custom}) => (\r\n          <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid} \r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}/>\r\n        )\r\n\r\nconst AuthForm = reduxForm({form: \"auth\", validate}) ((props)=>{\r\n    const classes = useStyles();\r\n    const {  pristine, submitting} = props\r\n    return(\r\n      <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={renderTextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"login\"\r\n              label=\"Электронная почта\"\r\n              name=\"login\"\r\n              autoComplete=\"login\"\r\n              autoFocus\r\n            />\r\n           <Field component={renderTextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              disabled={ submitting}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Войти\r\n            </Button>\r\n            \r\n          </form>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\nconst Submit = (app, currentUser) => (data) => {\r\n  app(data.login, data.password, currentUser )\r\n}\r\n\r\n  if (props.isLog){\r\n    debugger\r\n  //alert(props.interests+props.currentUser+props.isGet+props.Ind[0])\r\n  return <Redirect to=\"/Anketa\"/>\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Заходите на сайт, всегда Вам рады!\r\n          </Typography>\r\n        \r\n\r\n          <AuthForm onSubmit={Submit(props.setAuthorization, localStorage.getItem('token'))}/>\r\n\r\n         \r\n          <Grid container className={classes.button}  justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button  size=\"small\"  color=\"primary\" component={Link} to=\"/Signup\">\r\n                  Нет учетной записи? Регистрация\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n            \r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  isLog: state.user.isLog,\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  isGet: state.user.isGet,\r\n  Ind: state.user.Ind\r\n})\r\n\r\nexport default connect(mapStateProps, {setAuthorization})(Login)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Anketa.js",["145","146","147"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport Copyright from './Copyright';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Anketa, changeInd} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   toolbar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        width: '100%',\r\n        position: 'right',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        orientation: 'center',\r\n        justifyContent: 'right',\r\n      },\r\n    toolbarTitle: {\r\n        flex: 1,\r\n      },\r\n    toolbarSecondary: {\r\n        justifyContent: 'space-between',\r\n        overflowX: 'auto',\r\n      },\r\n    toolbarLink: {\r\n        padding: theme.spacing(1),\r\n        flexShrink: 0,\r\n      },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    //marginBottom: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '200%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 3, 2),\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n    align: 'justify'\r\n  },\r\n}));  \r\n\r\nconst renderCheckbox = ({ input, label, znak, ind, changeInd, indexes }) => (\r\n  <div>\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        checked={znak ? true : false}\r\n        onChange={ () => {\r\n          \r\n          changeInd(ind, indexes)} }\r\n      />\r\n    }\r\n    label={label}\r\n  />\r\n</div>\r\n)\r\n\r\n\r\nconst AnketaForm = reduxForm({form: \"anketa\"})((props)=>{\r\n    const classes = useStyles(); \r\n    \r\n    return(\r\n     \r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n          \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\">\r\n                        1) Интересующии вас сферы IT\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Web\"}\r\n                        id=\"Web\"\r\n                        control={<Checkbox checked={props.Ind[0]} value={props.Ind[0]} color=\"secondary\" />}\r\n                        label=\"WEB\" \r\n                        znak={props.Ind[0]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {0}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Gamedev\"}\r\n                        id=\"Gamedev\"\r\n                        control={<Checkbox checked={props.Ind[1]} value=\"GD\" color=\"secondary\" />}\r\n                        label=\"Gamedev\"\r\n                        znak={props.Ind[1]}\r\n                        indexes = {props.Ind}\r\n                        changeInd = {props.changeInd}\r\n                        ind = {1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"Mobile\"}\r\n                         id=\"Mobile\"\r\n                        control={<Checkbox value=\"mobile\" checked={props.Ind[2]} color=\"secondary\" />}\r\n                        label=\"Мобильная разработка\"\r\n                        znak={props.Ind[2]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {2}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Robot\"}\r\n                        id=\"Robot\"\r\n                        control={<Checkbox value=\"robot\" color=\"secondary\" checked={props.Ind[3]} />}\r\n                        label=\"Робототехника\"\r\n                        znak={props.Ind[3]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"DevOps\"}\r\n                        id=\"DevOps\"\r\n                        control={<Checkbox value=\"devops\" checked={props.Ind[4]} color=\"secondary\" />}\r\n                        label=\"DevOps\"\r\n                        znak={props.Ind[4]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"QA\"}\r\n                        id=\"QA\"\r\n                        control={<Checkbox value=\"qa\" checked={props.Ind[5]} color=\"secondary\" />}\r\n                        label=\"QA\"\r\n                        znak={props.Ind[5]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"DataScience\"}\r\n                        id=\"DataScience\"\r\n                        control={<Checkbox value=\"ds\" checked={props.Ind[6]} color=\"secondary\" />}\r\n                        label=\"DataScience\"\r\n                        znak={props.Ind[6]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"UI\"}\r\n                         id=\"UI\"\r\n                        control={<Checkbox value=\"ui\" checked={props.Ind[7]}  color=\"secondary\" />}\r\n                        label=\"UI/UX\"\r\n                        znak={props.Ind[7]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n      \r\n\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\" gutterBottom>\r\n                        2) Интересующии вас языки программирования\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Java\"}\r\n                        id=\"Java\"\r\n                        control={<Checkbox value=\"java\" checked={props.Ind[8]} color=\"secondary\" />}\r\n                        label=\"Java\"\r\n                        znak={props.Ind[8]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"PHP\"}\r\n                        id=\"PHP\"\r\n                        control={<Checkbox value=\"php\" checked={props.Ind[9]} color=\"secondary\" />}\r\n                        label=\"PHP\"\r\n                        znak={props.Ind[9]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Python\"}\r\n                        id=\"Python\"\r\n                        control={<Checkbox value=\"python\" checked={props.Ind[10]} color=\"secondary\" />}\r\n                        label=\"Python\"\r\n                        znak={props.Ind[10]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Csharp\"}\r\n                        id=\"Csharp\"\r\n                        control={<Checkbox value=\"ch\" checked={props.Ind[11]} color=\"secondary\" />}\r\n                        label=\"C#\"\r\n                        znak={props.Ind[11]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Cplus\"}\r\n                        id=\"Cplus\"\r\n                        control={<Checkbox value=\"c\" checked={props.Ind[12]} color=\"secondary\" />}\r\n                        label=\"C++\"\r\n                        znak={props.Ind[12]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"CSS\"}\r\n                        id=\"CSS\"\r\n                        control={<Checkbox value=\"css\" checked={props.Ind[13]} color=\"secondary\" />}\r\n                        label=\"CSS\"\r\n                        znak={props.Ind[13]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"HTML\"}\r\n                        id=\"HTML\"\r\n                        control={<Checkbox value=\"html\" checked={props.Ind[14]} color=\"secondary\" />}\r\n                        label=\"HTML\"\r\n                        znak={props.Ind[14]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"JavaScript\"}\r\n                        id=\"JavaScript\"\r\n                        control={<Checkbox value=\"jvs\" checked={props.Ind[15]} color=\"secondary\" />}\r\n                        label=\"JavaScript\"\r\n                        znak={props.Ind[15]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"React\"}\r\n                        id=\"React\"\r\n                        control={<Checkbox value=\"react\" checked={props.Ind[16]} color=\"secondary\" />}\r\n                        label=\"React\"\r\n                        znak={props.Ind[16]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Angular\"}\r\n                        id=\"Angular\"\r\n                        control={<Checkbox value=\"ang\" checked={props.Ind[17]} color=\"secondary\" />}\r\n                        label=\"Angular\"\r\n                        znak={props.Ind[17]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Kotlin\"}\r\n                        id=\"Kotlin\"\r\n                        control={<Checkbox value=\"kotl\" checked={props.Ind[18]} color=\"secondary\" />}\r\n                        label=\"Kotlin\"\r\n                        znak={props.Ind[18]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n      \r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\">\r\n                        3) Интересующии вас мероприятия IT\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"hackathon\"}\r\n                        id=\"hackathon\"\r\n                        control={<Checkbox value=\"hak\" checked={props.Ind[19]} color=\"secondary\" />}\r\n                        label=\"Хакатон\"\r\n                        znak={props.Ind[19]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"lecture\"}\r\n                        id=\"lecture\"\r\n                        control={<Checkbox value=\"lek\" checked={props.Ind[20]} color=\"secondary\" />}\r\n                        label=\"Лекция\"\r\n                        znak={props.Ind[20]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}sm={4} >\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"conference\"}\r\n                        id=\"conference\"\r\n                        control={<Checkbox value=\"konf\" checked={props.Ind[21]} color=\"secondary\" />}\r\n                        label=\"Конференция\"\r\n                        znak={props.Ind[21]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"onlinecourse\"}\r\n                        id=\"onlinecourse\"\r\n                        control={<Checkbox value=\"onl\" checked={props.Ind[22]} color=\"secondary\" />}\r\n                        label=\"Онлайн-курс\"\r\n                        znak={props.Ind[22]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"traineeship\"}\r\n                        id=\"traineeship\"\r\n                        control={<Checkbox value=\"sta\" checked={props.Ind[23]} color=\"secondary\" />}\r\n                        label=\"Стажировка\"\r\n                        znak={props.Ind[23]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"forum\"}\r\n                        id=\"forum\"\r\n                        control={<Checkbox value=\"for\"checked={props.Ind[24]} color=\"secondary\" />}\r\n                        label=\"Форум\"\r\n                        znak={props.Ind[24]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"training\"}\r\n                        id=\"training\"\r\n                        control={<Checkbox value=\"tren\" checked={props.Ind[25]} color=\"secondary\" />}\r\n                        label=\"Тренинг\"\r\n                        znak={props.Ind[25]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"webinar\"}\r\n                        id=\"webinar\"\r\n                        control={<Checkbox value=\"webin\" checked={props.Ind[26]} color=\"secondary\" />}\r\n                        label=\"Вебинар\"\r\n                        znak={props.Ind[26]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"seminar\"}\r\n                        id=\"seminar\"\r\n                        control={<Checkbox value=\"semin\" checked={props.Ind[27]} color=\"secondary\" />}\r\n                        label=\"Семинар\"\r\n                        znak={props.Ind[27]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        \r\n\r\n        \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\"  variant=\"h6\" gutterBottom>\r\n                        4) Предпочтительный формат\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"offline\"}\r\n                        id=\"offline\"\r\n                        control={<Checkbox value=\"ochno\" checked={props.Ind[28]} color=\"secondary\" />}\r\n                        label=\"Очно\"\r\n                        znak={props.Ind[28]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} >\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"online\"}\r\n                        id=\"online\"\r\n                        control={<Checkbox value=\"zaochno\" checked={props.Ind[29]}  color=\"secondary\" />}\r\n                        label=\"Заочно\"\r\n                        znak={props.Ind[29]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\"  variant=\"h6\" gutterBottom>\r\n                        5) Предпочтительный город\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"moscow\"}\r\n                         id=\"moscow\"\r\n                        control={<Checkbox value=\"moscow\" checked={props.Ind[30]} color=\"secondary\" />}\r\n                        label=\"Москва\"\r\n                        znak={props.Ind[30]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"petersburg\"}\r\n                        id=\"petersburg\"\r\n                        control={<Checkbox value=\"saint\" checked={props.Ind[31]} color=\"secondary\" />}\r\n                        label=\"Санк-Петербург\"\r\n                        znak={props.Ind[31]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n       \r\n           \r\n            <Grid  className={classes.paper}  alignItems=\"center\" justify=\"center\">\r\n                    <Button\r\n                    id=\"save\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    startIcon={<SaveIcon />}\r\n                    className={classes.button}\r\n                    >\r\n                    Сохранить       \r\n                    </Button>\r\n              </Grid>\r\n\r\n        </form>\r\n        )\r\n    })\r\n\r\n    const ButtonExit = reduxForm({form: \"exit\"})((props)=>{\r\n      return(\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <Button id=\"exit\" name=\"exit\"  color=\"default\" type=\"submit\"  variant=\"outlined\"  size=\"medium\" >\r\n              Выйти\r\n            </Button>\r\n        </form>\r\n        )\r\n      })\r\n\r\n      const ButtonClear = reduxForm({form: \"clear\"})((props)=>{\r\n        const classes = useStyles();\r\n        return(\r\n          <form  onSubmit={props.handleSubmit}>\r\n              <Button  id=\"save\"  \r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    //color=\"primary\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    startIcon={<DeleteIcon />}\r\n        >\r\n                Очистить\r\n              </Button>\r\n          </form>\r\n          )\r\n        })\r\n\r\n      const ButtonExitEvent = reduxForm({form: \"exit\"})((props)=>{\r\n        return(\r\n          <form  >\r\n          <Button size=\"medium\" color=\"default\" id=\"itEvent\" component={Link} to=\"/lenta\" name=\"itEvent\" type=\"submit\"  >\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n          >\r\n            IT Events\r\n            </Typography>\r\n            </Button> \r\n\r\n        </form>\r\n        )\r\n      })\r\n\r\n      let inter;\r\n      let inds;\r\n\r\n      const Submit = (app,currentUser,Post,Get, tags) => (data) => {\r\n        \r\n        inter=[];\r\n        inds=[];\r\n    \r\n        if (data.Web || tags[0]){\r\n            inter.push('Web')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Gamedev===true || tags[1]){\r\n            inter.push('Gamedev')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Mobile===true || tags[2]){\r\n          inter.push('Mobile')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Robot===true || tags[3]){\r\n          inter.push('Robot')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.DevOps===true || tags[4]){\r\n          inter.push('DevOps')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.QA===true || tags[5]){\r\n          inter.push('QA')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.DataScience===true || tags[6]){\r\n          debugger\r\n          inter.push('DataScience')\r\n          inds.push(true);\r\n        }\r\n        else{\r\n        debugger\r\n          inds.push(false); \r\n        }\r\n        if (data.UI===true || tags[7]){\r\n          inter.push('UI')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Java===true || tags[8]){\r\n          inter.push('Java')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.PHP===true || tags[9]){\r\n          inter.push('PHP')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Python===true || tags[10]){\r\n          inter.push('Python')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Csharp===true || tags[11]){\r\n          inter.push('Csharp')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Cplus===true || tags[12]){\r\n          inter.push('Cplus')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n        \r\n        if (data.CSS===true || tags[13]){\r\n          inter.push('CSS')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.HTML===true || tags[14]){\r\n          inter.push('HTML')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.JavaScript===true || tags[15]){\r\n          inter.push('JavaScript')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.React===true || tags[16]){\r\n          inter.push('React')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n    \r\n        if (data.Angular===true || tags[17]){\r\n          inter.push('Angular')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Kotlin===true || tags[18]){\r\n          inter.push('Kotlin')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.hackathon===true || tags[19]){\r\n            inter.push('hackathon')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n      \r\n        if (data.lecture===true || tags[20]){\r\n            inter.push('lecture')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false);\r\n    \r\n        if (data.conference===true || tags[21]){\r\n              inter.push('conference')\r\n              inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n    \r\n        if (data.onlinecourse===true || tags[22]){\r\n              inter.push('onlinecourse')\r\n              inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false);\r\n          \r\n          \r\n        if (data.traineeship===true || tags[23]){\r\n          inter.push('traineeship')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n          \r\n        if (data.forum===true || tags[24]){\r\n            inter.push('forum')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n          \r\n        if (data.training===true || tags[25]){\r\n          inter.push('training')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.webinar===true || tags[26]){\r\n            inter.push('webinar')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n      \r\n        if (data.seminar===true || tags[27]){\r\n            inter.push('seminar')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n       \r\n    \r\n        if (data.offline || tags[28]){\r\n            inter.push('offline')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.online===true || tags[29]){\r\n            inter.push('online')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false);   \r\n          \r\n          \r\n        if (data.moscow===true || tags[30]){\r\n          inter.push('moscow')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.petersburg===true || tags[31]){\r\n          inter.push('petersburg')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n    \r\n          \r\n        app(currentUser, inter, inds, Post,false, Get)\r\n      }\r\n\r\nconst AnketaProps = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  const SubmitButton = (app) => (data) => {\r\n    app(localStorage.getItem('token'),[] ,[], false, true, false)\r\n    debugger\r\n  }\r\n\r\n  const SubmitButtonEvent = (app) => (data) => {\r\n    app(localStorage.getItem('token'),[],[], false, false,false, true)\r\n    \r\n  }\r\n  const SubmitButtonClear = (app) => (data) => {\r\n    app(localStorage.getItem('token'),[],[], false, false,false,false,true)\r\n    \r\n  }\r\n  \r\n  if (props.isEvent || props.isExit){\r\n    //props.isEvent=false;\r\n    //props.isExit=false;\r\n    debugger\r\n    return <Redirect to=\"/lenta\"/>\r\n  }\r\n\r\n  if (props.Ind[35]){\r\n    debugger\r\n    props.Ind[35]=false;\r\n    return (\r\n\r\n      <React.Fragment>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n\r\n      <ButtonExitEvent onSubmit={SubmitButtonEvent(props.Anketa)}/>\r\n\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h5\"\r\n        color=\"inherit\"\r\n        align=\"right\"\r\n        noWrap\r\n        className={classes.toolbarTitle}\r\n      >\r\n      \r\n      </Typography>\r\n\r\n      <ButtonExit onSubmit={SubmitButton(props.Anketa)}/>\r\n\r\n      </Toolbar>\r\n   \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Анкета регистрации\r\n        </Typography>\r\n       \r\n        <AnketaForm Ind={props.Ind} changeInd = {props.changeInd} onSubmit={Submit( props.Anketa, localStorage.getItem('token'), props.isPost, props.isGet, props.Ind)}/>\r\n        <ButtonClear onSubmit={SubmitButtonClear(props.Anketa)}/>\r\n\r\n       \r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </React.Fragment> \r\n  );\r\n//return <Redirect to=\"/Anketa\"/>\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n\r\n      <React.Fragment>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n\r\n      <ButtonExitEvent onSubmit={SubmitButtonEvent(props.Anketa)}/>\r\n\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h5\"\r\n        color=\"inherit\"\r\n        align=\"right\"\r\n        noWrap\r\n        className={classes.toolbarTitle}\r\n      >\r\n      \r\n      </Typography>\r\n\r\n      <ButtonExit onSubmit={SubmitButton(props.Anketa)}/>\r\n\r\n      </Toolbar>\r\n   \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Анкета регистрации\r\n        </Typography>\r\n       \r\n        <AnketaForm Ind={props.Ind}  changeInd = {props.changeInd} onSubmit={Submit(props.Anketa, localStorage.getItem('token'), props.isPost, props.isGet, props.Ind)}/>\r\n        <ButtonClear onSubmit={SubmitButtonClear(props.Anketa)}/>\r\n\r\n       \r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </React.Fragment> \r\n  );\r\n\r\n}\r\nconst mapAnketaStateProps = (state) => ({\r\n    message: state.user.message,\r\n    currentUser: state.user.currentUser,\r\n    interests: state.user.interests,\r\n    isPost: state.user.isPost,\r\n    isGet: state.user.isGet,\r\n    isExit: state.user.isExit,\r\n    isEvent: state.user.isEvent,\r\n    Ind: state.user.Ind\r\n  })\r\n  \r\n  export default connect(mapAnketaStateProps, {Anketa, changeInd})(AnketaProps)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Signup.js",["148","149"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport setAuth from './../reducers/userReducer'\r\n\r\n\r\nimport Copyright from './Copyright';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setRegistration} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    //marginTop: theme.spacing(8),\r\n    //display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n\r\n}));\r\n\r\n\r\n  \r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n \r\n  /*if (values.firstName.length > 12) {\r\n    errors.firstName = 'Максимальная длина 12'\r\n  }*/\r\n  /*if (values.lastName.length > 15) {\r\n    errors.lastName = 'Максимальная длина 15'\r\n  }*/\r\n  if (\r\n    values.login &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n  ) {\r\n    errors.login = 'Неверный адрес почты'\r\n  }\r\n\r\n /* if (values.password.length < 8) {\r\n    errors.firstName = 'Минимальная длина 8'\r\n  }*/\r\n\r\n /* const beginWithoutDigit = /^\\D.*$/\r\n  const withoutSpecialChars = /^[^-() /]*$/\r\n  const containsLetters = /^.*[a-zA-Z]+.*$/\r\n  const withoutSpaces = /^[\\S]$/\r\n\r\nif( beginWithoutDigit.test(values.password) &&\r\n    withoutSpecialChars.test(values.password) &&\r\n    containsLetters.test(values.password) ){\r\n} else {\r\n    errors.login = 'Необходимо наличие: цифор,спец.символов и латинских букв'\r\n}\r\n\r\nif( withoutSpaces.test(values.password)){\r\n} else {\r\n    errors.login = 'Пробелы недопустимы'\r\n}\r\n*/\r\n\r\n  return errors\r\n}\r\n\r\n   const renderTextField = ({\r\n      label, input, \r\n      meta:{ touched, invalid, error},\r\n        ...custom}) => (\r\n          <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid} \r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}/>\r\n        )\r\n\r\nconst RegForm = reduxForm({form: \"reg\", validate})((props)=>{\r\n  const classes = useStyles();\r\n  const {  pristine, submitting} = props\r\n  return(\r\n    <form className={classes.form} onSubmit={props.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={5}>\r\n              <Field component={renderTextField}\r\n                    autoComplete=\"firstName\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"Ваше имя\"\r\n                    autoFocus\r\n              />\r\n        \r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n              <Field component={renderTextField}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Ваша фамилия\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"/>\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field component={renderTextField}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"login\"\r\n                label=\"Электронная почта\"\r\n                name=\"login\"\r\n                autoComplete=\"login\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field component={renderTextField}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field \r\n                name={\"checkbox\"}\r\n                component ={FormControlLabel}\r\n                control={<Checkbox value=\"allowExtralogins\" color=\"primary\" />}\r\n                label=\"Я хочу получать различные предложения и уведомления по электронной почте.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            disabled={submitting}\r\n            color=\"primary\"\r\n            className={classes.submit}>\r\n            Начать\r\n          </Button>\r\n        \r\n        </form>\r\n  )\r\n})\r\n\r\nconst Submit = (app) => (data) => {\r\n  app(data.login, data.password)\r\n}\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const classes = useStyles();\r\n \r\n  if (props.isAuth){\r\n    debugger;\r\n  return <Redirect to=\"/welcome\"/>\r\n  }\r\n\r\n  else return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Регистрация\r\n        </Typography>\r\n \r\n        <RegForm onSubmit={Submit(props.setRegistration)}/>\r\n\r\n        <Grid container className={classes.button} justify=\"flex-end\">\r\n          <Grid item>\r\n            <Button  size=\"small\" color=\"primary\" component={Link} to=\"/welcome\">\r\n              Уже зарегистрированы? Войти\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.user.isAuth,\r\n    message: state.user.message\r\n})\r\n\r\nexport default connect(mapStateToProps, {setRegistration })(SignUp)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\index.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\index.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\reducers\\FileReducer.js",["150"],"import { ScreenRotation } from \"@material-ui/icons\";\r\n\r\nconst defaultState= {\r\n\r\n}\r\n\r\nexport default function fileReducer(state=defaultState, action){\r\n    switch(action.type){\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Documents\\Desktop\\final project\\frontend\\src\\reducers\\userReducer.js",["151"],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Copyright.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Blog.js",["152","153","154"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Header from './Header';\r\nimport Events from './Events';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {setLenta} from './../../../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nconst sections = [\r\n  { title: 'Конференции', url: '#' },\r\n  { title: 'Хакатоны', url: '#' },\r\n  { title: 'Вебинары', url: '#' },\r\n  { title: 'Форумы', url: '#' },\r\n  { title: 'Онлайн-курсы', url: '#' },\r\n  { title: 'Стажировки', url: '#' },\r\n  { title: 'Семинары', url: '#' },\r\n  { title: 'Лекции', url: '#' },  \r\n];\r\n\r\nconst events = [\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\r\n    short_info: \"24 октября 9:30\",\r\n  },\r\n  {\r\n    title: \"Кейс-чемпионат\",\r\n    image_url: \"https://source.unsplash.com/random/?programming\",\r\n    short_info: \"24 октября 18:00\",\r\n  },\r\n  {\r\n    title: \"QA online meetup\",\r\n    image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n    short_info: \"25 октября 16:30\",\r\n  },\r\n  {\r\n    title: \"Стажировка\",\r\n    image_url: \"https://source.unsplash.com/random/?science\",\r\n    short_info: \"26 октября 9:30\",\r\n  },\r\n  {\r\n    title: \"DevOps тренинг\",\r\n    image_url: \"https://source.unsplash.com/random/?computer\",\r\n    short_info: \"26 октября 15:00\",\r\n  },\r\n  {\r\n    title: \"Big Data Days 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?it,event,programming\",\r\n    short_info: \"27 октября 10:00\",\r\n  },\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n    short_info: \"27 октября 16:00\",\r\n  },\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?event,it\",\r\n    short_info: \"28 октября 18:30\",\r\n  },\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?event,programming\",\r\n    short_info: \"28 октября 19:30\",\r\n  },\r\n];\r\n\r\nconst Blog = (props) => {\r\n\r\n  const events = //props.card;\r\n  [\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\r\n      short_info: \"24 октября 9:30\",\r\n    },\r\n    {\r\n      title: \"Кейс-чемпионат\",\r\n      image_url: \"https://source.unsplash.com/random/?programming\",\r\n      short_info: \"24 октября 18:00\",\r\n    },\r\n    {\r\n      title: \"QA online meetup\",\r\n      image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n      short_info: \"25 октября 16:30\",\r\n    },\r\n    {\r\n      title: \"Стажировка\",\r\n      image_url: \"https://source.unsplash.com/random/?science\",\r\n      short_info: \"26 октября 9:30\",\r\n    },\r\n    {\r\n      title: \"DevOps тренинг\",\r\n      image_url: \"https://source.unsplash.com/random/?computer\",\r\n      short_info: \"26 октября 15:00\",\r\n    },\r\n    {\r\n      title: \"Big Data Days 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?it,event,programming\",\r\n      short_info: \"27 октября 10:00\",\r\n    },\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n      short_info: \"27 октября 16:00\",\r\n    },\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?event,it\",\r\n      short_info: \"28 октября 18:30\",\r\n    },\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?event,programming\",\r\n      short_info: \"28 октября 19:30\",\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Header sections={sections} />\r\n        <main>\r\n          <Events events={events} />\r\n        </main>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapcardStateProps = (state) => ({\r\n  isLog: state.user.isLog,\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser\r\n})\r\n\r\nexport default connect(mapcardStateProps, {})(Blog)\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Blogs.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\API\\userAPI.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Header.js",["155","156","157","158","159","160"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport {setlk} from './../../../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    align: 'right'\r\n  },\r\n}));\r\n\r\nconst ButtonLK = reduxForm({form: \"lk\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form >\r\n    <Button variant=\"outlined\" component={Link} to=\"/Anketa\" color=\"default\"  className={classes.button} size=\"medium\" >\r\n          Личный кабинет   \r\n    </Button>\r\n  </form>\r\n  )\r\n})\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  \r\n    const SubmitButtonLK = (app) => (data) => {\r\n      app(false, localStorage.getItem('token'))}\r\n\r\n    /*if (props.LK){\r\n        debugger\r\n        //props.LK=false;\r\n        return <Redirect to=\"/Anketa\"/>\r\n    }*/\r\n    debugger\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar className={classes.toolbar}>\r\n\r\n          <Button size=\"medium\" color=\"default\" component={Link} to=\"/lenta\" > \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            IT Events\r\n          </Typography>\r\n          </Button>   \r\n        \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n      \r\n          </Typography>\r\n          \r\n        \r\n        {\r\n          localStorage.getItem('token') ? <ButtonLK /*onSubmit={SubmitButtonLK(props.setlk)}*//> : \r\n          <Button variant=\"outlined\" color=\"default\" align=\"right\" size=\"medium\"   className={classes.button} component={Link} to=\"/welcome\">\r\n          Войти\r\n          </Button>\r\n        }\r\n         \r\n\r\n         \r\n\r\n        </Toolbar>\r\n        \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst maplkStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  isPost: state.user.isPost,\r\n  isGet: state.user.isGet,\r\n  isExit: state.user.isExit,\r\n  isEvent: state.user.isEvent,\r\n  Ind: state.user.Ind,\r\n  LK: state.user.LK,\r\n  isLog: state.user.isLog,\r\n})\r\n\r\nexport default connect(maplkStateProps, {setlk})(Header)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Events.js",["161","162","163","164"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport CardEvent from './cardevent';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Events = (props) => {\r\n  //const { events } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3} className={classes.mainGrid}>\r\n          <Grid container item xs={9} spacing={3}>\r\n            {props.lenta.map((event) => (\r\n\r\n              <Grid item xs={3} sm={4} key={event._id}>\r\n              <CardEvent title={event.title}  image_url={\"https://source.unsplash.com/random/?programming,it,\"+event.title}\r\n              short_info= {event.startDate}  id={event._id}>\r\n              </CardEvent>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Grid container item xs={3} sm={3} md={3}>\r\n            <Sidebar date={\"fgf\"} format={\"fgbfn\"} where={\"mk\"} price={\"kjbjh\"} time={\"jhbjh\"} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapLentaStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  lenta: state.user.lenta,\r\n})\r\n\r\nexport default connect(mapLentaStateProps, {})(Events)\r\n\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Event.js",["165","166","167","168"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Markdown from './text'\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardContent, Divider } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Event= (props) => {\r\n  const classes = useStyles();\r\n\r\n//let posts = props.Card.description;\r\n  return (\r\n    <React.Fragment>\r\n      <MainFeaturedPost title={props.Card.title} id={props.Card._id} image_url={\"https://source.unsplash.com/random/?programming,it,\"+props.Card.title}  />\r\n\r\n      <Grid container spacing={5} className={classes.mainGrid}>\r\n          <Grid item xs={12} md={8}>\r\n          <Divider />\r\n          <Typography gutterBottom className={classes.markdown}  variant=\"overline\" component=\"h2\" >\r\n                {props.Card.description}\r\n              </Typography>\r\n        </Grid>\r\n       <Sidebar date={props.Card.startDate}  where={props.Card.tags} price={props.Card.tags} /> \r\n        \r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card,\r\n})\r\n\r\nexport default connect(mapStateProps, {})(Event)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Headers.js",["169","170","171","172","173","174"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport {setlk} from './../../../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    align: 'right'\r\n  },\r\n}));\r\n\r\nconst ButtonLK = reduxForm({form: \"lk\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  >\r\n    <Button variant=\"outlined\" component={Link} to=\"/Anketa\" color=\"default\"  className={classes.button} size=\"medium\" >\r\n          Личный кабинет   \r\n    </Button>\r\n  </form>\r\n  )\r\n})\r\n\r\nconst ButtonEvent = reduxForm({form: \"event\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  >\r\n    <Button size=\"medium\"  component={Link} to=\"/lenta\" color=\"default\" type=\"submit\"> \r\n          <Typography\r\n       \r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            IT Events\r\n          </Typography>\r\n          </Button>   \r\n  </form>\r\n  )\r\n})\r\n\r\nconst Headers = (props) => {\r\n  const classes = useStyles();\r\n  \r\n    const SubmitButtonLK = (app) => (data) => {\r\n    app(false, localStorage.getItem('token'))}\r\n\r\n    const SubmitButtonEvent = (app) => (data) => {\r\n        app(true, localStorage.getItem('token'))\r\n    }\r\n\r\n    if (props.LK){\r\n        debugger\r\n        //props.LK=false;\r\n        return <Redirect to=\"/Anketa\"/>\r\n    }\r\n    else if (props.isEv){\r\n      debugger\r\n      return <Redirect to=\"/lenta\"/>\r\n    }\r\n    debugger\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar className={classes.toolbar}>\r\n\r\n        <ButtonEvent /*onSubmit={SubmitButtonEvent(props.setlk)}*/ />\r\n        \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            \r\n          </Typography>\r\n        \r\n        {\r\n          localStorage.getItem('token') ? <ButtonLK /*onSubmit={SubmitButtonLK(props.setlk)}*//> : \r\n          <Button variant=\"outlined\" color=\"default\" size=\"medium\" className={classes.button}  component={Link} to=\"/welcome\">\r\n          Войти\r\n          </Button>\r\n        }\r\n         \r\n\r\n         \r\n\r\n        </Toolbar>\r\n        \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst maplkStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  isPost: state.user.isPost,\r\n  isGet: state.user.isGet,\r\n  isExit: state.user.isExit,\r\n  isEvent: state.user.isEvent,\r\n  Ind: state.user.Ind,\r\n  LK: state.user.LK,\r\n  isLog: state.user.isLog,\r\n  isEv: state.user.isEv,\r\n})\r\n\r\nexport default connect(maplkStateProps, {setlk})(Headers)\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\cardevent.js",["175","176","177","178","179","180","181","182","183","184","185"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Check, CheckBox } from '@material-ui/icons';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport {setCard} from './../../../reducers/userReducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport  {Link}  from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 280,\r\n    height: 300,\r\n\r\n  },\r\n  media: {\r\n    height: 240,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n    marginbottom: theme.spacing(3),\r\n    }\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n}));\r\n\r\nconst Cardform = reduxForm({form: \"card\"})((props)=>{\r\n  const classes = useStyles();\r\n\r\n\r\n  return(\r\n      <form className={classes.form} >\r\n\r\n        <CardActionArea  component={Link} to={\"/event/\"+props.id} >\r\n            <CardMedia\r\n              component=\"img\"\r\n              //alt=\"Contemplative Reptile\"\r\n              height=\"140\"\r\n              image={props.image_url}\r\n              //title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              \r\n              <Typography gutterBottom noWrap variant=\"h5\" component=\"h2\" >\r\n                {props.title}\r\n              </Typography>\r\n        \r\n              <Typography variant=\"body2\" color=\"textSecondary\" >\r\n                {props.short_info}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n\r\n\r\n        </form>\r\n        )\r\n    })\r\n\r\n  const Submit = (app, currentUser, id) => (data) => {\r\n    app(currentUser, id)\r\n    debugger\r\n    \r\n  }\r\n\r\nconst CardEvent = (props) => {\r\n  const classes = useStyles();\r\n \r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n\r\n      <Cardform short_info={props.short_info} \r\n       image_url={props.image_url} \r\n       title={props.title} \r\n       id={props.id}\r\n        /*onSubmit={Submit(props.setCard, localStorage.getItem('token'), props.id)}*//>\r\n\r\n      <CardActions /*disableSpacing*/>\r\n      <div  className={classes.controls}>\r\n        {localStorage.getItem('token') ?\r\n        <Button color=\"default\" size=\"medium\"   >\r\n        в избранное\r\n        </Button> :\r\n          <Button color=\"default\" size=\"medium\" onClick={() => {alert('Вам необходимо войти на сайт для добавления мероприятия в избранное') }} \r\n         >\r\n            в избранное\r\n          </Button>\r\n        }\r\n      <GradeRoundedIcon color=\"secondary\"/>\r\n      </div>\r\n      </CardActions>\r\n     \r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapCardStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card: state.user.Card,\r\n})\r\n\r\nexport default connect(mapCardStateProps, {setCard})(CardEvent)\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\text.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Sidebar.js",["186","187","188","189","190","191","192","193","194","195","196"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport cardevent from '../../lenta/src/cardevent';\r\nimport { Card } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  sidebarAbout: {\r\n    backgroundColor: theme.palette.grey[200],  \r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper elevation={3} className={classes.sidebarAboutBox}>\r\n        <Typography variant=\"h6\" className={classes.sidebarAbout} gutterBottom>\r\n          {\"Информация о событии\"}\r\n        </Typography>\r\n\r\n\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <TodayIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Начало мероприятия\" secondary={props.Card.startDate} />\r\n        </ListItem>\r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <TodayIcon />\r\n          </ListItemIcon>\r\n          { props.Card.endDate ? \r\n           <ListItemText primary=\"Конец мероприятия\" secondary={props.Card.endDate} />\r\n          :\r\n          <ListItemText primary=\"Конец мероприятия\" secondary={props.Card.startDate} /> \r\n          }\r\n         \r\n        </ListItem>\r\n\r\n       \r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <RoomOutlinedIcon />\r\n          </ListItemIcon>\r\n          { props.Card.tags ? props.Card.tags[0]===('online') ? \r\n          <ListItemText primary=\"Место\" secondary={props.Card.tags[0]} />\r\n          :\r\n          <ListItemText primary=\"Место\" secondary={props.Card.location} /> \r\n          : null}\r\n          </ListItem> \r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <MonetizationOnOutlinedIcon />\r\n          </ListItemIcon>\r\n          { props.Card.tags ? props.Card.tags[2]===('paid') ? \r\n          <ListItemText primary=\"Стоимость\" secondary=\"Paid\" />\r\n          :\r\n          <ListItemText primary=\"Стоимость\" secondary=\"Free\" /> \r\n          : 0}\r\n         \r\n        </ListItem>\r\n\r\n        \r\n      \r\n      </List>\r\n      <div className={classes.buttonsSide}>\r\n        {\r\n          localStorage.getItem('token') ? <Button variant=\"contained\" color=\"secondary\">в избранное</Button> :\r\n          <Button variant=\"contained\" \r\n          onClick={() => {alert('Вам необходимо войти на сайт для добавления мероприятия в избранное') }}  \r\n          color=\"secondary\">Добавить в избранное</Button>\r\n\r\n        }\r\n        \r\n        </div>\r\n\r\n      </Paper>  \r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapbarStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card,\r\n})\r\n\r\nexport default connect(mapbarStateProps, {})(Sidebar)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Main.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\MainFeaturedPost.js",["197","198","199","200","201","202","203","204"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 40,\r\n    height: 40,\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"center\"\r\n      \r\n      \r\n    },\r\n    margin: theme.spacing(1),\r\n    alignItems: 'right',\r\n    alignSelf: \"end\",\r\n    Align: \"right\",\r\n    position: 'right',\r\n\r\n\r\n  },\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n      \r\n    },\r\n  },\r\n}));\r\nconst MainFeaturedPost= (props) => {\r\n  const classes = useStyles();\r\n \r\n  return (\r\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${props.image_url})` }}>\r\n      {<img style={{ display: 'none' }} src={props.image_url} />}\r\n      <div className={classes.overlay} />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <div className={classes.mainFeaturedPostContent}>\r\n            <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" >\r\n              {props.title}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n              {props.short_info}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.buttonsSide}>\r\n          <div className={classes.buttonsSide}>\r\n      \r\n\r\n            \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card\r\n})\r\n\r\nexport default connect(mapStateProps, {})(MainFeaturedPost)\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Main.js",["205"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Markdown from './Markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const { posts} = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={8}>\r\n      <Divider />\r\n      {posts.map((post) => (\r\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\r\n          {post}\r\n        </Markdown>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Sidebar.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Box } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setLenta} from './../../../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n/*function ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}*/\r\nconst renderCheckbox = ({ input, label }) => (\r\n  <div>\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={input.value ? true : false}\r\n          onChange={input.onChange}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  </div>\r\n)\r\n\r\nconst Filter = reduxForm({ form: \"filter\" }) ((props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={props.handleSubmit}>\r\n      <Grid item xs={12} md={12}>\r\n        <Paper elevation={4} className={classes.sidebarAboutBox}>\r\n         \r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\r\n                  Формат мероприятия\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Field\r\n                  name={\"online\"}\r\n                  id=\"online\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Дистанционное\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n        \r\n\r\n\r\n         \r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\r\n                  Цена\r\n        </Typography>\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Field\r\n                   name={\"paid\"}\r\n                   id=\"paid\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Платное\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n         \r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\r\n                  Вид мероприятия\r\n        </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                 name={\"hackathon\"}\r\n                 id=\"hackathon\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Хакатон\"\r\n                />\r\n\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"conference\"}\r\n                  id=\"conference\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"semin\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Конференция\"\r\n                />\r\n              </Grid>\r\n             \r\n\r\n              <Grid item xs={10} sm={6} >\r\n                <Field\r\n                  name={\"forum\"}\r\n                  id=\"forum\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"konf\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Форум\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"webinar\"}\r\n                  id=\"webinar\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"onl\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Вебинар\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"meetup\"}\r\n                  id=\"meetup\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"sta\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Meet up\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"master\"}\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"for\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Мастер-класс\"\r\n                  id=\"master\"\r\n                />\r\n              </Grid>\r\n             \r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"onlinecourse\"}\r\n                  id=\"onlinecourse\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"webin\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Онлайн-курс\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"vystav\"}\r\n                  id=\"vystav\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"vystav\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Выставка\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"sorevnovan\"}\r\n                  id=\"sorevnovan\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"tren\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Соревнование\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n         \r\n\r\n\r\n          <div className={classes.buttonsSide}>\r\n            <Typography\r\n              align=\"left\">\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\" >Применить</Button>\r\n            </Typography>\r\n          </div>\r\n\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n})\r\n\r\n let list=[];\r\n\r\nconst  Sidebar = (props) => {\r\n\r\n  const Submit = (app) => (data) => {\r\n\r\n    let list=[];\r\n\r\n\r\n    if (data.online===true)\r\n      list.push('online')\r\n    \r\n\r\n    if (data.paid===true)\r\n      list.push('paid')\r\n\r\n\r\n    if (data.hackathon===true)\r\n      list.push('хакатон')\r\n\r\n    if (data.vystav===true)\r\n      list.push('выставка')\r\n\r\n    if (data.forum===true)\r\n      list.push('форум')\r\n    \r\n    if (data.webinar===true)\r\n      list.push('вебинар')\r\n\r\n    if (data.master===true)\r\n      list.push('мастер-класс')\r\n\r\n    if (data.sorevnovan===true)\r\n      list.push('соревнование')\r\n\r\n    if (data.meetup===true)\r\n      list.push('митап')\r\n\r\n    if (data.onlinecourse===true)\r\n      list.push('курс')\r\n\r\n    if (data.conference===true)\r\n      list.push('конференция')\r\n\r\n      \r\n    app(localStorage.getItem('token'), list)\r\n  }\r\n\r\n  return(\r\n\r\n    <Filter onSubmit={Submit(props.setLenta)}/>\r\n  );\r\n}\r\n\r\nconst lentaStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser\r\n})\r\n\r\n\r\nexport default connect(lentaStateProps, {setLenta})(Sidebar)","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\event\\src\\Markdown.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\Markdown.js",[],"D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\lenta\\src\\MainFeaturedPost.js",["224","225","226","227"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n      \r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainFeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { title, image_url, short_info } = props;\r\n\r\n  return (\r\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${image_url})` }}>\r\n      {<img style={{ display: 'none' }} src={image_url} />}\r\n      <div className={classes.overlay} />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <div className={classes.mainFeaturedPostContent}>\r\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" >\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n              {short_info}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.buttonsSide}>\r\n          <div className={classes.buttonsSide}>\r\n            <IconButton>\r\n              <GradeRoundedIcon fontSize=\"large\" color=\"secondary\"  />\r\n            </IconButton>\r\n\r\n            \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n\r\n  );\r\n}\r\n\r\nMainFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n\r\n","D:\\Documents\\Desktop\\final project\\frontend\\src\\components\\Anketaf.js",[],{"ruleId":"228","severity":1,"message":"229","line":4,"column":13,"nodeType":"230","messageId":"231","endLine":4,"endColumn":26},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"228","severity":1,"message":"236","line":21,"column":10,"nodeType":"230","messageId":"231","endLine":21,"endColumn":22},{"ruleId":"228","severity":1,"message":"237","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":15},{"ruleId":"228","severity":1,"message":"238","line":117,"column":14,"nodeType":"230","messageId":"231","endLine":117,"endColumn":22},{"ruleId":"228","severity":1,"message":"239","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"240","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":18},{"ruleId":"228","severity":1,"message":"241","line":20,"column":8,"nodeType":"230","messageId":"231","endLine":20,"endColumn":18},{"ruleId":"228","severity":1,"message":"237","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":15},{"ruleId":"228","severity":1,"message":"238","line":110,"column":12,"nodeType":"230","messageId":"231","endLine":110,"endColumn":20},{"ruleId":"228","severity":1,"message":"242","line":1,"column":10,"nodeType":"230","messageId":"231","endLine":1,"endColumn":24},{"ruleId":"228","severity":1,"message":"243","line":133,"column":7,"nodeType":"230","messageId":"231","endLine":133,"endColumn":19},{"ruleId":"228","severity":1,"message":"244","line":8,"column":9,"nodeType":"230","messageId":"231","endLine":8,"endColumn":17},{"ruleId":"228","severity":1,"message":"245","line":9,"column":9,"nodeType":"230","messageId":"231","endLine":9,"endColumn":17},{"ruleId":"228","severity":1,"message":"246","line":23,"column":7,"nodeType":"230","messageId":"231","endLine":23,"endColumn":13},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"240","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"241","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":18},{"ruleId":"228","severity":1,"message":"245","line":9,"column":15,"nodeType":"230","messageId":"231","endLine":9,"endColumn":23},{"ruleId":"228","severity":1,"message":"239","line":10,"column":10,"nodeType":"230","messageId":"231","endLine":10,"endColumn":19},{"ruleId":"228","severity":1,"message":"248","line":51,"column":11,"nodeType":"230","messageId":"231","endLine":51,"endColumn":25},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"249","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":24},{"ruleId":"228","severity":1,"message":"250","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"245","line":13,"column":9,"nodeType":"230","messageId":"231","endLine":13,"endColumn":17},{"ruleId":"228","severity":1,"message":"250","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":12},{"ruleId":"228","severity":1,"message":"251","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":16},{"ruleId":"228","severity":1,"message":"252","line":9,"column":10,"nodeType":"230","messageId":"231","endLine":9,"endColumn":14},{"ruleId":"228","severity":1,"message":"253","line":9,"column":16,"nodeType":"230","messageId":"231","endLine":9,"endColumn":27},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"240","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"241","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":18},{"ruleId":"228","severity":1,"message":"239","line":10,"column":10,"nodeType":"230","messageId":"231","endLine":10,"endColumn":19},{"ruleId":"228","severity":1,"message":"248","line":71,"column":11,"nodeType":"230","messageId":"231","endLine":71,"endColumn":25},{"ruleId":"228","severity":1,"message":"254","line":74,"column":11,"nodeType":"230","messageId":"231","endLine":74,"endColumn":28},{"ruleId":"228","severity":1,"message":"240","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":18},{"ruleId":"228","severity":1,"message":"255","line":12,"column":10,"nodeType":"230","messageId":"231","endLine":12,"endColumn":15},{"ruleId":"228","severity":1,"message":"256","line":12,"column":17,"nodeType":"230","messageId":"231","endLine":12,"endColumn":25},{"ruleId":"228","severity":1,"message":"257","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":24},{"ruleId":"228","severity":1,"message":"258","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":16},{"ruleId":"228","severity":1,"message":"259","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":16},{"ruleId":"228","severity":1,"message":"260","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":22},{"ruleId":"228","severity":1,"message":"245","line":21,"column":10,"nodeType":"230","messageId":"231","endLine":21,"endColumn":18},{"ruleId":"228","severity":1,"message":"261","line":22,"column":10,"nodeType":"230","messageId":"231","endLine":22,"endColumn":14},{"ruleId":"228","severity":1,"message":"262","line":22,"column":16,"nodeType":"230","messageId":"231","endLine":22,"endColumn":22},{"ruleId":"228","severity":1,"message":"263","line":84,"column":9,"nodeType":"230","messageId":"231","endLine":84,"endColumn":15},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"264","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":30},{"ruleId":"228","severity":1,"message":"265","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":24},{"ruleId":"228","severity":1,"message":"240","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":18},{"ruleId":"228","severity":1,"message":"266","line":18,"column":8,"nodeType":"230","messageId":"231","endLine":18,"endColumn":30},{"ruleId":"228","severity":1,"message":"267","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":32},{"ruleId":"228","severity":1,"message":"257","line":21,"column":8,"nodeType":"230","messageId":"231","endLine":21,"endColumn":24},{"ruleId":"228","severity":1,"message":"258","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":16},{"ruleId":"228","severity":1,"message":"268","line":23,"column":8,"nodeType":"230","messageId":"231","endLine":23,"endColumn":17},{"ruleId":"228","severity":1,"message":"252","line":24,"column":10,"nodeType":"230","messageId":"231","endLine":24,"endColumn":14},{"ruleId":"228","severity":1,"message":"269","line":44,"column":10,"nodeType":"230","messageId":"231","endLine":44,"endColumn":22},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"240","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":18},{"ruleId":"228","severity":1,"message":"265","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":24},{"ruleId":"228","severity":1,"message":"270","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":29},{"ruleId":"228","severity":1,"message":"257","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":24},{"ruleId":"228","severity":1,"message":"258","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":16},{"ruleId":"228","severity":1,"message":"252","line":14,"column":10,"nodeType":"230","messageId":"231","endLine":14,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":78,"column":8,"nodeType":"273","endLine":78,"endColumn":65},{"ruleId":"228","severity":1,"message":"274","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":18},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"275","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":12},{"ruleId":"228","severity":1,"message":"276","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"277","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":16},{"ruleId":"228","severity":1,"message":"278","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":20},{"ruleId":"228","severity":1,"message":"279","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":20},{"ruleId":"228","severity":1,"message":"280","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":15},{"ruleId":"228","severity":1,"message":"264","line":13,"column":8,"nodeType":"230","messageId":"231","endLine":13,"endColumn":30},{"ruleId":"228","severity":1,"message":"281","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":17},{"ruleId":"228","severity":1,"message":"282","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":24},{"ruleId":"228","severity":1,"message":"283","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":34},{"ruleId":"228","severity":1,"message":"284","line":18,"column":8,"nodeType":"230","messageId":"231","endLine":18,"endColumn":17},{"ruleId":"228","severity":1,"message":"285","line":19,"column":10,"nodeType":"230","messageId":"231","endLine":19,"endColumn":13},{"ruleId":"228","severity":1,"message":"240","line":20,"column":8,"nodeType":"230","messageId":"231","endLine":20,"endColumn":18},{"ruleId":"228","severity":1,"message":"266","line":21,"column":8,"nodeType":"230","messageId":"231","endLine":21,"endColumn":30},{"ruleId":"228","severity":1,"message":"267","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":32},{"ruleId":"228","severity":1,"message":"245","line":29,"column":9,"nodeType":"230","messageId":"231","endLine":29,"endColumn":17},{"ruleId":"228","severity":1,"message":"286","line":217,"column":6,"nodeType":"230","messageId":"231","endLine":217,"endColumn":10},{"ruleId":"228","severity":1,"message":"275","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":12},{"ruleId":"228","severity":1,"message":"287","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":14},{"ruleId":"228","severity":1,"message":"288","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":57,"column":8,"nodeType":"273","endLine":57,"endColumn":59},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["289"],"no-negated-in-lhs",["290"],"'LinkOffSharp' is defined but never used.","'setAuth' is defined but never used.","'pristine' is assigned a value but never used.","'TextField' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'ScreenRotation' is defined but never used.","'setInterests' is assigned a value but never used.","'setLenta' is defined but never used.","'Redirect' is defined but never used.","'events' is assigned a value but never used.","'PropTypes' is defined but never used.","'SubmitButtonLK' is assigned a value but never used.","'MainFeaturedPost' is defined but never used.","'Main' is defined but never used.","'Markdown' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'SubmitButtonEvent' is assigned a value but never used.","'Check' is defined but never used.","'CheckBox' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'Grid' is defined but never used.","'Hidden' is defined but never used.","'Submit' is assigned a value but never used.","'AccessTimeOutlinedIcon' is defined but never used.","'GradeRoundedIcon' is defined but never used.","'ThumbUpAltOutlinedIcon' is defined but never used.","'ThumbDownAltOutlinedIcon' is defined but never used.","'cardevent' is defined but never used.","'ListItemLink' is defined but never used.","'StarBorderTwoToneIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Link' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'TodayIcon' is defined but never used.","'RoomOutlinedIcon' is defined but never used.","'MonetizationOnOutlinedIcon' is defined but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'list' is assigned a value but never used.","'Button' is defined but never used.","'FavoriteIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]