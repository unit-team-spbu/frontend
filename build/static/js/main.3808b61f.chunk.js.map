{"version":3,"sources":["components/Copyright.js","API/userAPI.js","reducers/userReducer.js","components/Anketa.js","components/Login.js","components/Signup.js","components/lenta/src/Header.js","components/lenta/src/MainFeaturedPost.js","components/lenta/src/Markdown.js","components/lenta/src/Main.js","components/lenta/src/Sidebar.js","components/lenta/src/cardevent.js","components/lenta/src/Events.js","components/lenta/src/Blog.js","components/lenta/src/index.js","components/event/src/Headers.js","components/event/src/MainFeaturedPost.js","components/event/src/Markdown.js","components/event/src/Main.js","components/event/src/Sidebar.js","components/event/src/Event.js","components/event/src/Blogs.js","components/event/src/index.js","components/App.js","serviceWorker.js","reducers/FileReducer.js","reducers/index.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","ms","axios","baseURL","lentaAPI","token","tags","length","post","then","res","data","AnketaGet","get","params","SET_AUTH","SET_LOG","SET_MESSAGE","SET_TOKEN","SET_POST","SET_LENTA","SET_INTERESTS","SET_GET","SET_EXIT","SET_EVENT","SET_IND","SET_LK","SET_CARD","SET_ISCARD","SET_EV","defaultState","currentUser","isAuth","message","isLog","lenta","interests","isPost","isGet","isExit","isEvent","Ind","LK","iscard","Card","isEv","inter","inds","setLog","type","setMessage","setToken","setPost","setGet","setlenta","setExit","setEvent","setInd","setLK","isCard","setLenta","list","dispatch","err","toString","alert","setlk","event","ind","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","button","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","AuthForm","reduxForm","validate","values","errors","login","test","props","classes","submitting","pristine","className","onSubmit","handleSubmit","Field","component","required","fullWidth","id","name","autoComplete","autoFocus","Button","disabled","connect","state","user","setAuthorization","password","loginAPI","response","app","to","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","justify","size","Box","mt","RegForm","FormControlLabel","control","Checkbox","value","setRegistration","regAPI","Container","maxWidth","toolbar","borderBottom","divider","position","orientation","justifyContent","toolbarTitle","flex","toolbarSecondary","overflowX","toolbarLink","padding","flexShrink","marginBottom","renderCheckbox","znak","checked","onChange","AnketaForm","gutterBottom","startIcon","ButtonExit","ButtonClear","ButtonExitEvent","noWrap","Submit","Post","Get","Web","push","Gamedev","Mobile","Robot","DevOps","QA","DataScience","UI","Java","PHP","Python","Csharp","Cplus","CSS","HTML","JavaScript","React","Angular","Kotlin","hackathon","lecture","conference","onlinecourse","traineeship","forum","training","webinar","seminar","offline","online","moscow","petersburg","Yes","No","YN","Anketa","exit","Event","clear","put","AnketaPut","AnketaPost","Fragment","Toolbar","SubmitButton","SubmitButtonClear","ButtonLK","mainFeaturedPost","grey","common","white","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","buttonsSide","alignSelf","textAlign","withStyles","listItem","markdown","typography","body2","sidebarAboutBox","Filter","paid","vystav","master","sorevnovan","meetup","media","paddingTop","controls","marginbottom","Cardform","CardActionArea","CardMedia","image_url","CardContent","title","short_info","setCard","CardGet","setcard","CardActions","onClick","mainGrid","card","cardMedia","cardContent","flexGrow","map","key","_id","startDate","date","format","where","price","time","sections","url","events","this","Component","ButtonEvent","SubmitButtonLK","Align","style","src","paragraph","sidebarAbout","paddingLeft","List","aria-label","ListItem","ListItemIcon","ListItemText","primary","endDate","location","Divider","description","full_info","Blogs","ReactDOM","render","document","getElementById","App","path","Login","SignUp","Boolean","window","hostname","match","rootReducer","combineReducers","reducer","action","files","store","createStore","composeWithDevTools","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.3808b61f.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {' © '}\n      <Link color=\"inherit\" href=\"https://github.com/unit-team-spbu\">\n        IT EVENTS\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default Copyright;","import * as axios from 'axios';\r\n\r\nconst ms = axios.create({\r\n    baseURL: \"http://20.52.2.24:8000\"\r\n})\r\n\r\nexport const regAPI = (login, password) => {\r\n    debugger\r\n    return ms.post(\"/register/\", {login, password}).then(res=>res.data)\r\n}\r\n\r\nexport const loginAPI = (login, password) => {\r\n    return ms.post(\"/login/\", {login, password}).then(res=>res.data)\r\n}\r\n\r\nexport const lentaAPI = (token, tags) => {\r\n    \r\n    if(token.length>4 && tags[0]){\r\n    return ms.post(\"/feed/\", {token, tags}).then(res=>res.data)\r\n    }\r\n    else if (token.length>4){\r\n        return ms.post(\"/feed/\", {token}).then(res=>res.data)\r\n    }\r\n    else if (tags[0]){\r\n        return ms.post(\"/feed/\", {tags}).then(res=>res.data)\r\n    }\r\n    else return ms.post(\"/feed/\", {}).then(res=>res.data)\r\n    \r\n}\r\n\r\nexport const AnketaPost = (token, interests, ind) => {\r\n    return ms.post(\"/profile/interests/\", {token, interests, ind}).then(res=>res.data)\r\n}\r\n\r\nexport const AnketaPut = (token, interests, ind) => {\r\n    return ms.put(\"/profile/interests/\", {token, interests,ind}).then(res=>res.data)\r\n}\r\n\r\nexport const AnketaGet = (token) => {\r\n    return ms.get(\"/profile/interests/\", {params: {token}}).then(res=>res.data)\r\n}\r\n\r\nexport const CardGet = (token, id) => {\r\n    if (token.length>3) {return ms.get(\"feed/\"+id+\"/\", {params: {token}}).then(res=>res.data) }\r\n    else \r\n    return ms.get(\"feed/\"+id+\"/\", {}).then(res=>res.data)\r\n}\r\n\r\n","import { AnketaGet, AnketaPost, AnketaPut, CardGet, regAPI } from \"../API/userAPI\";\nimport { loginAPI } from \"../API/userAPI\";\nimport { lentaAPI } from \"../API/userAPI\";\n\nconst SET_AUTH = \"SET_AUTH_USER_REDUCER\"\nconst SET_LOG = \"SET_LOG_USER_REDUCER\"\nconst SET_MESSAGE = \"SET_MESSAGE_USER_REDUCER\"\nconst SET_TOKEN = \"SET_TOKEN_USER_REDUCER\"\nconst SET_POST = \"SET_POST_USER_REDUCER\"\nconst SET_LENTA = \"SET_LENTA_USER_REDUCER\"\nconst SET_INTERESTS = \"SET_INTERESTS_USER_REDUCER\"\nconst SET_GET = \"SET_GET_USER_REDUCER\"\nconst SET_EXIT = \"SET_EXIT_USER_REDUCER\"\nconst SET_EVENT = \"SET_EVENT_USER_REDUCER\"\nconst SET_IND = \"SET_IND_USER_REDUCER\"\nconst SET_LK = \"SET_LK_USER_REDUCER\"\nconst SET_CARD = \"SET_CARD_USER_REDUCER\"\nconst SET_ISCARD = \"SET_ISCARD_USER_REDUCER\"\nconst SET_EV = \"SET_EV_USER_REDUCER\"\n\nconst defaultState= {\n    currentUser: \"\",\n    isAuth: false,\n    message: \"\",\n    isLog: false,\n    lenta: [],\n    interests: \"\",\n    isPost: false,\n    isGet: false,\n    isExit: false,\n    isEvent: false,\n    Ind: [false,false,false,false,false,false,false,false,false,false,false,false,\n        false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,\n        false,false,false,false,false,false,false,false,false],\n    LK: false,\n    iscard: false,\n    Card: [],\n    isEv: false\n}\n\nexport default function userReducer(state=defaultState, action){\n    switch(action.type){\n        case SET_AUTH:\n            return{\n                ...state,\n                isAuth: action.isAuth\n            }\n        case SET_IND:\n            return{\n                ...state,\n                Ind: action.Ind\n            }\n        case SET_EV:\n                return{\n                    ...state,\n                    isEv: action.isEv\n                }\n        case SET_LK:\n                return{\n                    ...state,\n                    LK: action.LK\n                }\n        case SET_EXIT:\n            return{\n                ...state,\n                isExit: action.isExit\n            }\n        case SET_LOG:\n            return{\n                ...state,\n                isLog: action.isLog\n            }\n        case SET_POST:\n            return{\n                ...state,\n                isPost: action.isPost\n            }\n        case SET_GET:\n            return{\n                ...state,\n                isGet: action.isGet\n            }\n        case SET_MESSAGE:\n            return{\n                ...state, \n                message: action.message\n            }\n        case SET_TOKEN:\n            return{\n                ...state, \n                 currentUser: action.currentUser\n            }   \n\n        case SET_LENTA:\n             return{\n            ...state, \n            lenta: action.lenta\n            }  \n        case SET_INTERESTS:\n            return{\n            ...state, \n            interests: action.interests\n            }     \n        case SET_EVENT:\n                return{\n                ...state, \n                isEvent: action.isEvent\n                }  \n                \n        case SET_ISCARD:\n            return{\n            ...state, \n            iscard: action.iscard\n            }\n        case SET_CARD:\n                return{\n                ...state, \n                Card: action.Card\n                }                    \n        \n        default:\n            return state\n    }\n}\n\nconst setAuth = (isAuth) => ({type: SET_AUTH, isAuth});\nconst setLog = (isLog) => ({type: SET_LOG, isLog});\nconst setMessage = (message) => ({type: SET_MESSAGE, message});\nconst setToken = (currentUser) => ({type: SET_TOKEN, currentUser});\nconst setPost = (isPost) => ({type: SET_POST, isPost});\nconst setGet = (isGet) => ({type: SET_GET, isGet});\nconst setlenta = (lenta) => ({type: SET_LENTA, lenta});\nconst setInterests = (interests) => ({type: SET_INTERESTS, interests});\nconst setExit = (isExit) => ({type: SET_EXIT, isExit});\nconst setEvent = (isEvent) => ({type: SET_EVENT, isEvent});\nconst setInd = (Ind) => ({type: SET_IND, Ind});\nconst setLK = (LK) => ({type: SET_LK, LK});\nconst setcard = (Card) => ({type: SET_CARD, Card});\nconst isCard = (iscard) => ({type: SET_ISCARD, iscard});\nconst isEv = (isEv) => ({type: SET_EV, isEv});\n\nexport const setRegistration = (login, password) => dispatch => {\n    regAPI(login, password).then(res=>{\n        dispatch(setAuth(true))\n        //alert(res.message) \n        debugger\n    }, err=>{\n        debugger\n        dispatch(setMessage(err.toString()))\n        alert(err.response.data.message)\n    });\n}\n\nexport const setAuthorization = (login,password,token) => dispatch => {\n\n     loginAPI(login, password).then(res=>{\n        dispatch(setToken(res.token))\n        dispatch(setExit(false))\n        dispatch(setEvent(false))\n        dispatch(setLog(true))\n\n        AnketaGet(res.token).then(res=>{\n            if (res.ind){\n              dispatch(setGet(true))\n              dispatch(setInd(res.ind))\n            }\n            dispatch(setExit(false))\n            dispatch(setEvent(false))\n            dispatch(setInterests(res.interests))\n            debugger\n \n        }, err=>{\n            debugger\n            dispatch(setMessage(err.toString()))\n            //alert(err.response.data.message)\n        });\n        debugger\n    }, err=>{\n        debugger\n        dispatch(setMessage(err.toString()))\n        alert(err.response.data.message)\n    });\n\n}\n\n\n\n\nexport const setLenta = (token, list) => dispatch => {\n    lentaAPI(token, list).then(res=>{\n        dispatch(setlenta(res))\n        dispatch(setLK(false))\n        dispatch(setEvent(false))\n        dispatch(isCard(false))\n        dispatch(isEv(true))\n        \n        //alert(\"Ok\")\n        debugger\n    }, err=>{\n        debugger\n        dispatch(setMessage(err.toString()))\n        alert(err.toString())\n    });\n}\n    \nexport const Anketa = (token, interests,inds, post, exit, get, Event,clear) => dispatch => {\n\n    if (Event){\n        lentaAPI(token, false).then(res=>{\n            dispatch(setlenta(res))\n            dispatch(setLK(false))  \n            dispatch(isCard(false)) \n            dispatch(isEv(false)) \n            dispatch(setEvent(true))\n            debugger\n        }, err=>{\n            debugger\n            dispatch(setMessage(err.toString()))\n            alert(err.toString())\n        });\n    }\n    \n    else \n        if (exit){\n            lentaAPI('',false).then(res=>{debugger\n                dispatch(setlenta(res))\n                dispatch(setPost(false))\n                dispatch(setGet(false))\n                dispatch(setToken(\"\"))\n                dispatch(setLog(false))\n                dispatch(setLK(false))\n                dispatch(isEv(false))\n                dispatch(setEvent(false))\n                dispatch(setExit(true))\n                alert(\"Вы вышли\") \n                \n            }, err=>{\n                debugger\n                dispatch(setMessage(err.toString()))\n                alert(err.toString())\n            });\n        }\n\n        else \n            if (post || get) {\n                    AnketaPut(token, interests, inds).then(res=>{\n                    dispatch(setExit(false))\n                    dispatch(setEvent(false))\n                    debugger\n                    alert(\"Ваша анкета обновлена\")\n                }, err=>{\n                    debugger\n                    dispatch(setMessage(err.toString()))\n                    alert(err.response.data.message)\n                });\n            }\n            else if (clear) {\n                AnketaGet(token).then(res=>{\n                dispatch(setInd([false,false,false,false,false,false,false,false,false,false,false,false,\n                    false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,\n                    false,false,false,false,false,false,false,false,true]))\n                dispatch(setExit(false))\n                dispatch(setEvent(false))\n                debugger\n            }, err=>{\n                debugger\n                dispatch(setMessage(err.toString()))\n                alert(err.toString())\n            });      \n            }\n                 else {\n                        AnketaPost(token, interests, inds).then(res=>{\n                                debugger\n                                dispatch(setPost(true))\n                                dispatch(setExit(false))\n                                dispatch(setEvent(false))\n                                alert(\"Ваша анкета сохранена\")\n                            }, err=>{\n                                debugger\n                                dispatch(setMessage(err.toString()))\n                                alert(err.response.data.message)\n                            });\n                        }\n}\n\nexport const setlk = (event, token) => dispatch => {\n    if(event){\n        lentaAPI(token, false).then(res=>{\n            dispatch(setlenta(res))\n            dispatch(setLK(false))\n            dispatch(setEvent(false))\n            dispatch(isCard(false))\n            dispatch(isEv(true))\n            \n            //alert(\"Ok\")\n            debugger\n        }, err=>{\n            debugger\n            dispatch(setMessage(err.toString()))\n            alert(err.toString())\n        });\n    }\n    else {\n        AnketaGet(token).then(res=>{\n            if (res.ind){\n                dispatch(setGet(true))\n                dispatch(setInd(res.ind))\n            }\n            dispatch(setExit(false))\n            dispatch(setEvent(false))\n            dispatch(isEv(false))\n            dispatch(isCard(false))\n            dispatch(setLK(true))\n            debugger\n        }, err=>{\n            debugger\n            dispatch(setMessage(err.toString()))\n            alert(err.toString())\n        });\n    }\n}\n\nexport const setCard = (token, id) => dispatch => {\n    CardGet(token, id).then(res=>{\n        dispatch(setcard(res))\n        dispatch(setEvent(false))\n        dispatch(isEv(false))\n        dispatch(isCard(true))\n        \n        debugger\n    }, err=>{\n        debugger\n        dispatch(setMessage(err.toString()))\n        alert(err.toString())\n    });\n}\n\n\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport Copyright from './Copyright';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Anketa} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   toolbar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        width: '100%',\r\n        position: 'right',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        orientation: 'center',\r\n        justifyContent: 'right',\r\n      },\r\n    toolbarTitle: {\r\n        flex: 1,\r\n      },\r\n    toolbarSecondary: {\r\n        justifyContent: 'space-between',\r\n        overflowX: 'auto',\r\n      },\r\n    toolbarLink: {\r\n        padding: theme.spacing(1),\r\n        flexShrink: 0,\r\n      },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    //marginBottom: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '200%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 3, 2),\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n    align: 'justify'\r\n  },\r\n}));\r\n\r\nconst renderCheckbox = ({ input, label, znak }) => (\r\n  <div>\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        checked={znak ? true : input.value}\r\n        onChange={input.onChange}\r\n      />\r\n    }\r\n    label={label}\r\n  />\r\n</div>\r\n)\r\n\r\nconst AnketaForm = reduxForm({form: \"anketa\"})((props)=>{\r\n    const classes = useStyles();\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n          \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\">\r\n                        1) Интересующии вас сферы IT\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Web\"}\r\n                        id=\"Web\"\r\n                        control={<Checkbox checked={props.Ind[0]} value={props.Ind[0]} color=\"secondary\" />}\r\n                        label=\"WEB\" \r\n                        znak={props.Ind[0]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Gamedev\"}\r\n                        id=\"Gamedev\"\r\n                        control={<Checkbox checked={props.Ind[1]} value=\"GD\" color=\"secondary\" />}\r\n                        label=\"Gamedev\"\r\n                        znak={props.Ind[1]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"Mobile\"}\r\n                         id=\"Mobile\"\r\n                        control={<Checkbox value=\"mobile\" checked={props.Ind[2]} color=\"secondary\" />}\r\n                        label=\"Мобильная разработка\"\r\n                        znak={props.Ind[2]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Robot\"}\r\n                        id=\"Robot\"\r\n                        control={<Checkbox value=\"robot\" color=\"secondary\" checked={props.Ind[3]} />}\r\n                        label=\"Робототехника\"\r\n                        znak={props.Ind[3]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"DevOps\"}\r\n                        id=\"DevOps\"\r\n                        control={<Checkbox value=\"devops\" checked={props.Ind[4]} color=\"secondary\" />}\r\n                        label=\"DevOps\"\r\n                        znak={props.Ind[4]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"QA\"}\r\n                        id=\"QA\"\r\n                        control={<Checkbox value=\"qa\" checked={props.Ind[5]} color=\"secondary\" />}\r\n                        label=\"QA\"\r\n                        znak={props.Ind[5]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"DataScience\"}\r\n                        id=\"DataScience\"\r\n                        control={<Checkbox value=\"ds\" checked={props.Ind[6]} color=\"secondary\" />}\r\n                        label=\"DataScience\"\r\n                        znak={props.Ind[6]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"UI\"}\r\n                         id=\"UI\"\r\n                        control={<Checkbox value=\"ui\" checked={props.Ind[7]}  color=\"secondary\" />}\r\n                        label=\"UI/UX\"\r\n                        znak={props.Ind[7]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n      \r\n\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\" gutterBottom>\r\n                        1) Интересующии вас языки программирования\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Java\"}\r\n                        id=\"Java\"\r\n                        control={<Checkbox value=\"java\" checked={props.Ind[8]} color=\"secondary\" />}\r\n                        label=\"Java\"\r\n                        znak={props.Ind[8]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"PHP\"}\r\n                        id=\"PHP\"\r\n                        control={<Checkbox value=\"php\" checked={props.Ind[9]} color=\"secondary\" />}\r\n                        label=\"PHP\"\r\n                        znak={props.Ind[9]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Python\"}\r\n                        id=\"Python\"\r\n                        control={<Checkbox value=\"python\" checked={props.Ind[10]} color=\"secondary\" />}\r\n                        label=\"Python\"\r\n                        znak={props.Ind[10]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Csharp\"}\r\n                        id=\"Csharp\"\r\n                        control={<Checkbox value=\"ch\" checked={props.Ind[11]} color=\"secondary\" />}\r\n                        label=\"C#\"\r\n                        znak={props.Ind[11]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Cplus\"}\r\n                        id=\"Cplus\"\r\n                        control={<Checkbox value=\"c\" checked={props.Ind[12]} color=\"secondary\" />}\r\n                        label=\"C++\"\r\n                        znak={props.Ind[12]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"CSS\"}\r\n                        id=\"CSS\"\r\n                        control={<Checkbox value=\"css\" checked={props.Ind[13]} color=\"secondary\" />}\r\n                        label=\"CSS\"\r\n                        znak={props.Ind[13]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"HTML\"}\r\n                        id=\"HTML\"\r\n                        control={<Checkbox value=\"html\" checked={props.Ind[14]} color=\"secondary\" />}\r\n                        label=\"HTML\"\r\n                        znak={props.Ind[14]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"JavaScript\"}\r\n                        id=\"JavaScript\"\r\n                        control={<Checkbox value=\"jvs\" checked={props.Ind[15]} color=\"secondary\" />}\r\n                        label=\"JavaScript\"\r\n                        znak={props.Ind[15]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"React\"}\r\n                        id=\"React\"\r\n                        control={<Checkbox value=\"react\" checked={props.Ind[16]} color=\"secondary\" />}\r\n                        label=\"React\"\r\n                        znak={props.Ind[16]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Angular\"}\r\n                        id=\"Angular\"\r\n                        control={<Checkbox value=\"ang\" checked={props.Ind[17]} color=\"secondary\" />}\r\n                        label=\"Angular\"\r\n                        znak={props.Ind[17]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Kotlin\"}\r\n                        id=\"Kotlin\"\r\n                        control={<Checkbox value=\"kotl\" checked={props.Ind[18]} color=\"secondary\" />}\r\n                        label=\"Kotlin\"\r\n                        znak={props.Ind[18]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n      \r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\">\r\n                        1) Интересующии вас мероприятия IT\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"hackathon\"}\r\n                        id=\"hackathon\"\r\n                        control={<Checkbox value=\"hak\" checked={props.Ind[19]} color=\"secondary\" />}\r\n                        label=\"Хакатон\"\r\n                        znak={props.Ind[19]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"lecture\"}\r\n                        id=\"lecture\"\r\n                        control={<Checkbox value=\"lek\" checked={props.Ind[20]} color=\"secondary\" />}\r\n                        label=\"Лекция\"\r\n                        znak={props.Ind[20]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}sm={4} >\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"conference\"}\r\n                        id=\"conference\"\r\n                        control={<Checkbox value=\"konf\" checked={props.Ind[21]} color=\"secondary\" />}\r\n                        label=\"Конференция\"\r\n                        znak={props.Ind[21]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"onlinecourse\"}\r\n                        id=\"onlinecourse\"\r\n                        control={<Checkbox value=\"onl\" checked={props.Ind[22]} color=\"secondary\" />}\r\n                        label=\"Онлайн-курс\"\r\n                        znak={props.Ind[22]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"traineeship\"}\r\n                        id=\"traineeship\"\r\n                        control={<Checkbox value=\"sta\" checked={props.Ind[23]} color=\"secondary\" />}\r\n                        label=\"Стажировка\"\r\n                        znak={props.Ind[23]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"forum\"}\r\n                        id=\"forum\"\r\n                        control={<Checkbox value=\"for\"checked={props.Ind[24]} color=\"secondary\" />}\r\n                        label=\"Форум\"\r\n                        znak={props.Ind[24]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"training\"}\r\n                        id=\"training\"\r\n                        control={<Checkbox value=\"tren\" checked={props.Ind[25]} color=\"secondary\" />}\r\n                        label=\"Тренинг\"\r\n                        znak={props.Ind[25]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"webinar\"}\r\n                        id=\"webinar\"\r\n                        control={<Checkbox value=\"webin\" checked={props.Ind[26]} color=\"secondary\" />}\r\n                        label=\"Вебинар\"\r\n                        znak={props.Ind[26]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"seminar\"}\r\n                        id=\"seminar\"\r\n                        control={<Checkbox value=\"semin\" checked={props.Ind[27]} color=\"secondary\" />}\r\n                        label=\"Семинар\"\r\n                        znak={props.Ind[27]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        \r\n\r\n        \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\"  variant=\"h6\" gutterBottom>\r\n                        1) Предпочтительный формат\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"offline\"}\r\n                        id=\"offline\"\r\n                        control={<Checkbox value=\"ochno\" checked={props.Ind[28]} color=\"secondary\" />}\r\n                        label=\"Очно\"\r\n                        znak={props.Ind[28]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} >\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"online\"}\r\n                        id=\"online\"\r\n                        control={<Checkbox value=\"zaochno\" checked={props.Ind[29]}  color=\"secondary\" />}\r\n                        label=\"Заочно\"\r\n                        znak={props.Ind[29]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\"  variant=\"h6\" gutterBottom>\r\n                        1) Предпочтительный город\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"moscow\"}\r\n                         id=\"moscow\"\r\n                        control={<Checkbox value=\"moscow\" checked={props.Ind[30]} color=\"secondary\" />}\r\n                        label=\"Москва\"\r\n                        znak={props.Ind[30]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"petersburg\"}\r\n                        id=\"petersburg\"\r\n                        control={<Checkbox value=\"saint\" checked={props.Ind[31]} color=\"secondary\" />}\r\n                        label=\"Санк-Петербург\"\r\n                        znak={props.Ind[31]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\" >\r\n                        1) Интересует ли вас что-то новое?\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Yes\"}\r\n                        id=\"Yes\"\r\n                        control={<Checkbox value=\"yes\" checked={props.Ind[32]} color=\"secondary\" />}\r\n                        label=\"Да\"\r\n                        znak={props.Ind[32]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"No\"}\r\n                        id=\"No\"\r\n                        control={<Checkbox value=\"no\" checked={props.Ind[33]} color=\"secondary\" />}\r\n                        label=\"Нет\"\r\n                        znak={props.Ind[33]}\r\n                    />\r\n                </Grid>    \r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"YN\"}\r\n                        id=\"YN\"\r\n                        control={<Checkbox value=\"fz\" checked={props.Ind[34]} color=\"secondary\" />}\r\n                        label=\"Затрудняюсь ответить\"\r\n                        znak={props.Ind[34]}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n    \r\n            <Grid  className={classes.paper}  alignItems=\"center\" justify=\"center\">\r\n                    <Button\r\n                    id=\"save\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    startIcon={<SaveIcon />}\r\n                    className={classes.button}\r\n                    >\r\n                    Сохранить       \r\n                    </Button>\r\n              </Grid>\r\n\r\n        </form>\r\n        )\r\n    })\r\n\r\n    const ButtonExit = reduxForm({form: \"exit\"})((props)=>{\r\n      return(\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <Button id=\"exit\" name=\"exit\"  color=\"default\" type=\"submit\"  variant=\"outlined\"  size=\"medium\" >\r\n              Выйти\r\n            </Button>\r\n        </form>\r\n        )\r\n      })\r\n\r\n      const ButtonClear = reduxForm({form: \"clear\"})((props)=>{\r\n        const classes = useStyles();\r\n        return(\r\n          <form  onSubmit={props.handleSubmit}>\r\n              <Button  id=\"save\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    //color=\"primary\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    startIcon={<DeleteIcon />}\r\n        >\r\n                Очистить\r\n              </Button>\r\n          </form>\r\n          )\r\n        })\r\n\r\n      const ButtonExitEvent = reduxForm({form: \"exit\"})((props)=>{\r\n        return(\r\n          <form  onSubmit={props.handleSubmit}>\r\n          <Button size=\"medium\" color=\"default\" id=\"itEvent\"  name=\"itEvent\" type=\"submit\"  >\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n          >\r\n            IT Events\r\n            </Typography>\r\n            </Button> \r\n\r\n        </form>\r\n        )\r\n      })\r\n\r\n      let inter;\r\n      let inds;\r\n\r\n      const Submit = (app,currentUser,Post,Get, tags) => (data) => {\r\n\r\n        inter=[];\r\n        inds=[];\r\n    \r\n        if (data.Web || tags[0]){\r\n            inter.push('Web')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Gamedev===true || tags[1]){\r\n            inter.push('Gamedev')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Mobile===true || tags[2]){\r\n          inter.push('Mobile')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Robot===true || tags[3]){\r\n          inter.push('Robot')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.DevOps===true || tags[4]){\r\n          inter.push('DevOps')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.QA===true || tags[5]){\r\n          inter.push('QA')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.DataScience===true || tags[6]){\r\n          debugger\r\n          inter.push('DataScience')\r\n          inds.push(true);\r\n        }\r\n        else{\r\n        debugger\r\n          inds.push(false); \r\n        }\r\n        if (data.UI===true || tags[7]){\r\n          inter.push('UI')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Java===true || tags[8]){\r\n          inter.push('Java')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.PHP===true || tags[9]){\r\n          inter.push('PHP')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Python===true || tags[10]){\r\n          inter.push('Python')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Csharp===true || tags[11]){\r\n          inter.push('Csharp')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Cplus===true || tags[12]){\r\n          inter.push('Cplus')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n        \r\n        if (data.CSS===true || tags[13]){\r\n          inter.push('CSS')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.HTML===true || tags[14]){\r\n          inter.push('HTML')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.JavaScript===true || tags[15]){\r\n          inter.push('JavaScript')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.React===true || tags[16]){\r\n          inter.push('React')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n    \r\n        if (data.Angular===true || tags[17]){\r\n          inter.push('Angular')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Kotlin===true || tags[18]){\r\n          inter.push('Kotlin')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.hackathon===true || tags[19]){\r\n            inter.push('hackathon')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n      \r\n        if (data.lecture===true || tags[20]){\r\n            inter.push('lecture')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false);\r\n    \r\n        if (data.conference===true || tags[21]){\r\n              inter.push('conference')\r\n              inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n    \r\n        if (data.onlinecourse===true || tags[22]){\r\n              inter.push('onlinecourse')\r\n              inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false);\r\n          \r\n          \r\n        if (data.traineeship===true || tags[23]){\r\n          inter.push('traineeship')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n          \r\n        if (data.forum===true || tags[24]){\r\n            inter.push('forum')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n          \r\n        if (data.training===true || tags[25]){\r\n          inter.push('training')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.webinar===true || tags[26]){\r\n            inter.push('webinar')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n      \r\n        if (data.seminar===true || tags[27]){\r\n            inter.push('seminar')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n       \r\n    \r\n        if (data.offline || tags[28]){\r\n            inter.push('offline')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.online===true || tags[29]){\r\n            inter.push('online')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false);   \r\n          \r\n          \r\n        if (data.moscow===true || tags[30]){\r\n          inter.push('moscow')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.petersburg===true || tags[31]){\r\n          inter.push('petersburg')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n          \r\n        if (data.Yes===true || tags[32]){\r\n          inter.push('Yes')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.No===true || tags[33]){\r\n          inter.push('No')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.YN===true || tags[34]){\r\n          inter.push('YN')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n          \r\n        app(currentUser, inter, inds, Post,false, Get)\r\n      }\r\n\r\nconst AnketaProps = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  const SubmitButton = (app) => (data) => {\r\n    app(props.currentUser,[] ,[], false, true, false)\r\n    debugger\r\n  }\r\n\r\n  const SubmitButtonEvent = (app) => (data) => {\r\n    app(props.currentUser,[],[], false, false,false, true)\r\n    \r\n  }\r\n  const SubmitButtonClear = (app) => (data) => {\r\n    app(props.currentUser,[],[], false, false,false,false,true)\r\n    \r\n  }\r\n  \r\n  if (props.isEvent || props.isExit){\r\n    //props.isEvent=false;\r\n    //props.isExit=false;\r\n    debugger\r\n    return <Redirect to=\"/lenta\"/>\r\n  }\r\n\r\n  if (props.Ind[35]){\r\n    debugger\r\n    props.Ind[35]=false;\r\n    return <Redirect to=\"/Anketa\"/>\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n      <React.Fragment>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n\r\n      <ButtonExitEvent onSubmit={SubmitButtonEvent(props.Anketa)}/>\r\n\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h5\"\r\n        color=\"inherit\"\r\n        align=\"right\"\r\n        noWrap\r\n        className={classes.toolbarTitle}\r\n      >\r\n      \r\n      </Typography>\r\n\r\n      <ButtonExit onSubmit={SubmitButton(props.Anketa)}/>\r\n\r\n      </Toolbar>\r\n   \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Анкета регистрации\r\n        </Typography>\r\n       \r\n        <AnketaForm Ind={props.Ind} onSubmit={Submit(props.Anketa, props.currentUser, props.isPost, props.isGet, props.Ind)}/>\r\n        <ButtonClear onSubmit={SubmitButtonClear(props.Anketa)}/>\r\n\r\n       \r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </React.Fragment> \r\n  );\r\n\r\n}\r\nconst mapAnketaStateProps = (state) => ({\r\n    message: state.user.message,\r\n    currentUser: state.user.currentUser,\r\n    interests: state.user.interests,\r\n    isPost: state.user.isPost,\r\n    isGet: state.user.isGet,\r\n    isExit: state.user.isExit,\r\n    isEvent: state.user.isEvent,\r\n    Ind: state.user.Ind\r\n  })\r\n  \r\n  export default connect(mapAnketaStateProps, {Anketa})(AnketaProps)","import React from 'react';\r\n\r\n//import { Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Copyright from './Copyright';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setAuthorization} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { LinkOffSharp } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random/?programming,it)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    \r\n    //marginTop: theme.spacing(1),\r\n    //display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n   \r\n  },\r\n}));\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n \r\n  /*if (values.firstName.length > 12) {\r\n    errors.firstName = 'Максимальная длина 12'\r\n  }*/\r\n  /*if (values.lastName.length > 15) {\r\n    errors.lastName = 'Максимальная длина 15'\r\n  }*/\r\n  if (\r\n    values.login &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n  ) {\r\n    errors.login = 'Неверный адрес почты'\r\n  }\r\n  \r\n  /*if (values.password.length < 8) {\r\n    errors.firstName = 'Минимальная длина 8'\r\n  }*/\r\n\r\n /* const beginWithoutDigit = /^\\D.*$/\r\n  const withoutSpecialChars = /^[^-() /]*$/\r\n  const containsLetters = /^.*[a-zA-Z]+.*$/\r\n  const withoutSpaces = /^[\\S]$/\r\n\r\nif( beginWithoutDigit.test(values.password) &&\r\n    withoutSpecialChars.test(values.password) &&\r\n    containsLetters.test(values.password) ){\r\n} else {\r\n    errors.login = 'Необходимо наличие: цифор,спец.символов и латинских букв'\r\n}\r\n\r\nif( withoutSpaces.test(values.password)){\r\n} else {\r\n    errors.login = 'Пробелы недопустимы'\r\n}\r\n*/\r\n\r\n  return errors\r\n}\r\n\r\n   const renderTextField = ({\r\n      label, input, \r\n      meta:{ touched, invalid, error},\r\n        ...custom}) => (\r\n          <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid} \r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}/>\r\n        )\r\n\r\nconst AuthForm = reduxForm({form: \"auth\", validate}) ((props)=>{\r\n    const classes = useStyles();\r\n    const {  pristine, submitting} = props\r\n    return(\r\n      <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={renderTextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"login\"\r\n              label=\"Электронная почта\"\r\n              name=\"login\"\r\n              autoComplete=\"login\"\r\n              autoFocus\r\n            />\r\n           <Field component={renderTextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              disabled={ submitting}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Войти\r\n            </Button>\r\n            \r\n          </form>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\nconst Submit = (app, currentUser) => (data) => {\r\n  app(data.login, data.password, currentUser )\r\n}\r\n\r\n  if (props.isLog){\r\n    debugger\r\n  //alert(props.interests+props.currentUser+props.isGet+props.Ind[0])\r\n  return <Redirect to=\"/Anketa\"/>\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Заходите на сайт, всегда Вам рады!\r\n          </Typography>\r\n        \r\n\r\n          <AuthForm onSubmit={Submit(props.setAuthorization, props.currentUser)}/>\r\n\r\n         \r\n          <Grid container className={classes.button}  justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button  size=\"small\"  color=\"primary\" component={Link} to=\"/Signup\">\r\n                  Нет учетной записи? Регистрация\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n            \r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  isLog: state.user.isLog,\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  isGet: state.user.isGet,\r\n  Ind: state.user.Ind\r\n})\r\n\r\nexport default connect(mapStateProps, {setAuthorization})(Login)","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport Copyright from './Copyright';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setRegistration} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    //marginTop: theme.spacing(8),\r\n    //display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n\r\n}));\r\n\r\n\r\n  \r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n \r\n  /*if (values.firstName.length > 12) {\r\n    errors.firstName = 'Максимальная длина 12'\r\n  }*/\r\n  /*if (values.lastName.length > 15) {\r\n    errors.lastName = 'Максимальная длина 15'\r\n  }*/\r\n  if (\r\n    values.login &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n  ) {\r\n    errors.login = 'Неверный адрес почты'\r\n  }\r\n\r\n /* if (values.password.length < 8) {\r\n    errors.firstName = 'Минимальная длина 8'\r\n  }*/\r\n\r\n /* const beginWithoutDigit = /^\\D.*$/\r\n  const withoutSpecialChars = /^[^-() /]*$/\r\n  const containsLetters = /^.*[a-zA-Z]+.*$/\r\n  const withoutSpaces = /^[\\S]$/\r\n\r\nif( beginWithoutDigit.test(values.password) &&\r\n    withoutSpecialChars.test(values.password) &&\r\n    containsLetters.test(values.password) ){\r\n} else {\r\n    errors.login = 'Необходимо наличие: цифор,спец.символов и латинских букв'\r\n}\r\n\r\nif( withoutSpaces.test(values.password)){\r\n} else {\r\n    errors.login = 'Пробелы недопустимы'\r\n}\r\n*/\r\n\r\n  return errors\r\n}\r\n\r\n   const renderTextField = ({\r\n      label, input, \r\n      meta:{ touched, invalid, error},\r\n        ...custom}) => (\r\n          <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid} \r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}/>\r\n        )\r\n\r\nconst RegForm = reduxForm({form: \"reg\", validate})((props)=>{\r\n  const classes = useStyles();\r\n  const {  pristine, submitting} = props\r\n  return(\r\n    <form className={classes.form} onSubmit={props.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={5}>\r\n              <Field component={renderTextField}\r\n                    autoComplete=\"firstName\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"Ваше имя\"\r\n                    autoFocus\r\n              />\r\n        \r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n              <Field component={renderTextField}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Ваша фамилия\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"/>\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field component={renderTextField}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"login\"\r\n                label=\"Электронная почта\"\r\n                name=\"login\"\r\n                autoComplete=\"login\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field component={renderTextField}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field \r\n                name={\"checkbox\"}\r\n                component ={FormControlLabel}\r\n                control={<Checkbox value=\"allowExtralogins\" color=\"primary\" />}\r\n                label=\"Я хочу получать различные предложения и уведомления по электронной почте.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            disabled={submitting}\r\n            color=\"primary\"\r\n            className={classes.submit}>\r\n            Начать\r\n          </Button>\r\n        \r\n        </form>\r\n  )\r\n})\r\n\r\nconst Submit = (app) => (data) => {\r\n  app(data.login, data.password)\r\n}\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const classes = useStyles();\r\n \r\n  if (props.isAuth){\r\n  return <Redirect to=\"/welcome\"/>\r\n  }\r\n\r\n  else return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Регистрация\r\n        </Typography>\r\n \r\n        <RegForm onSubmit={Submit(props.setRegistration)}/>\r\n\r\n        <Grid container className={classes.button} justify=\"flex-end\">\r\n          <Grid item>\r\n            <Button  size=\"small\" color=\"primary\" component={Link} to=\"/welcome\">\r\n              Уже зарегистрированы? Войти\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.user.isAuth,\r\n    message: state.user.message\r\n})\r\n\r\nexport default connect(mapStateToProps, {setRegistration })(SignUp)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport {setlk} from './../../../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    align: 'right'\r\n  },\r\n}));\r\n\r\nconst ButtonLK = reduxForm({form: \"lk\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  onSubmit={props.handleSubmit}>\r\n    <Button variant=\"outlined\" color=\"default\" type=\"submit\" className={classes.button} size=\"medium\" >\r\n          Личный кабинет   \r\n    </Button>\r\n  </form>\r\n  )\r\n})\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  \r\n    const SubmitButtonLK = (app) => (data) => {\r\n      app(false, props.currentUser)}\r\n\r\n    if (props.LK){\r\n        debugger\r\n        //props.LK=false;\r\n        return <Redirect to=\"/Anketa\"/>\r\n    }\r\n    debugger\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar className={classes.toolbar}>\r\n\r\n          <Button size=\"medium\" color=\"default\" component={Link} to=\"/lenta\" > \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            IT Events\r\n          </Typography>\r\n          </Button>   \r\n        \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n      \r\n          </Typography>\r\n          \r\n        \r\n        {\r\n          props.isLog ? <ButtonLK onSubmit={SubmitButtonLK(props.setlk)}/> : \r\n          <Button variant=\"outlined\" color=\"default\" align=\"right\" size=\"medium\"   className={classes.button} component={Link} to=\"/welcome\">\r\n          Войти\r\n          </Button>\r\n        }\r\n         \r\n\r\n         \r\n\r\n        </Toolbar>\r\n        \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst maplkStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  isPost: state.user.isPost,\r\n  isGet: state.user.isGet,\r\n  isExit: state.user.isExit,\r\n  isEvent: state.user.isEvent,\r\n  Ind: state.user.Ind,\r\n  LK: state.user.LK,\r\n  isLog: state.user.isLog,\r\n})\r\n\r\nexport default connect(maplkStateProps, {setlk})(Header)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles((theme) => ({\n  mainFeaturedPost: {\n    position: 'relative',\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  mainFeaturedPostContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n  buttonsSide: {\n    '& > *': {\n      margin: theme.spacing(1),\n      alignItems: 'right',\n      alignSelf: \"end\",\n      textAlign: \"right\"\n      \n    },\n  },\n}));\n\nexport default function MainFeaturedPost(props) {\n  const classes = useStyles();\n  const { title, image_url, short_info } = props;\n\n  return (\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${image_url})` }}>\n      {<img style={{ display: 'none' }} src={image_url} />}\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.mainFeaturedPostContent}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" >\n              {title}\n            </Typography>\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\n              {short_info}\n            </Typography>\n          </div>\n        </Grid>\n        <Grid item md={6} className={classes.buttonsSide}>\n          <div className={classes.buttonsSide}>\n            <IconButton>\n              <GradeRoundedIcon fontSize=\"large\" color=\"secondary\"  />\n            </IconButton>\n\n            \n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n\n  );\n}\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport ReactMarkdown from 'markdown-to-jsx';\n\nconst styles = (theme) => ({\n  listItem: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h5',\n      },\n    },\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n    h4: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\n    },\n    p: { component: Typography, props: { paragraph: true } },\n    a: { component: Link },\n    li: {\n      component: withStyles(styles)(({ classes, ...props }) => (\n        <li className={classes.listItem}>\n          <Typography component=\"span\" {...props} />\n        </li>\n      )),\n    },\n  },\n};\n\nexport default function Markdown(props) {\n  return <ReactMarkdown options={options} {...props} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Markdown from './Markdown';\n\nconst useStyles = makeStyles((theme) => ({\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n}));\n\nexport default function Main(props) {\n  const classes = useStyles();\n  const { posts} = props;\n\n  return (\n    <Grid item xs={12} md={8}>\n      <Divider />\n      {posts.map((post) => (\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n          {post}\n        </Markdown>\n      ))}\n    </Grid>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\nimport TodayIcon from '@material-ui/icons/Today';\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Box } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport {setLenta} from './../../../reducers/userReducer'\nimport {Redirect} from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200],\n  },\n  buttonsSide: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n/*function ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}*/\nconst renderCheckbox = ({ input, label }) => (\n  <div>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={input.value ? true : false}\n          onChange={input.onChange}\n        />\n      }\n      label={label}\n    />\n  </div>\n)\n\nconst Filter = reduxForm({ form: \"filter\" }) ((props) => {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <Grid item xs={12} md={12}>\n        <Paper elevation={4} className={classes.sidebarAboutBox}>\n         \n            <Grid container spacing={0}>\n              <Grid item xs={12} sm={12}>\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\n                  Формат мероприятия\n                </Typography>\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                <Field\n                  name={\"online\"}\n                  id=\"online\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\n                  label=\"Дистанционное\"\n                />\n              </Grid>\n            </Grid>\n        \n\n\n         \n            <Grid container spacing={0}>\n              <Grid item xs={12} sm={12}>\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\n                  Цена\n        </Typography>\n              </Grid>\n\n\n              <Grid item xs={12} sm={12}>\n                <Field\n                   name={\"paid\"}\n                   id=\"paid\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\n                  label=\"Платное\"\n                />\n              </Grid>\n            </Grid>\n         \n            <Grid container spacing={0}>\n              <Grid item xs={12} sm={12}>\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\n                  Вид мероприятия\n        </Typography>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <Field\n                 name={\"hackathon\"}\n                 id=\"hackathon\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\n                  label=\"Хакатон\"\n                />\n\n              </Grid>\n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"conference\"}\n                  id=\"conference\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"semin\" size=\"small\" color=\"secondary\" />}\n                  label=\"Конференция\"\n                />\n              </Grid>\n             \n\n              <Grid item xs={10} sm={6} >\n                <Field\n                  name={\"forum\"}\n                  id=\"forum\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"konf\" size=\"small\" color=\"secondary\" />}\n                  label=\"Форум\"\n                />\n              </Grid>\n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"webinar\"}\n                  id=\"webinar\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"onl\" size=\"small\" color=\"secondary\" />}\n                  label=\"Вебинар\"\n                />\n              </Grid>\n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"meetup\"}\n                  id=\"meetup\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"sta\" size=\"small\" color=\"secondary\" />}\n                  label=\"Meet up\"\n                />\n              </Grid>\n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"master\"}\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"for\" size=\"small\" color=\"secondary\" />}\n                  label=\"Мастер-класс\"\n                  id=\"master\"\n                />\n              </Grid>\n             \n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"onlinecourse\"}\n                  id=\"onlinecourse\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"webin\" size=\"small\" color=\"secondary\" />}\n                  label=\"Онлайн-курс\"\n                />\n              </Grid>\n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"vystav\"}\n                  id=\"vystav\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"vystav\" size=\"small\" color=\"secondary\" />}\n                  label=\"Выставка\"\n                />\n              </Grid>\n              <Grid item xs={10} sm={6}>\n                <Field\n                  name={\"sorevnovan\"}\n                  id=\"sorevnovan\"\n                  component={renderCheckbox}\n                  control={<Checkbox value=\"tren\" size=\"small\" color=\"secondary\" />}\n                  label=\"Соревнование\"\n                />\n              </Grid>\n            </Grid>\n         \n\n\n          <div className={classes.buttonsSide}>\n            <Typography\n              align=\"left\">\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\" >Применить</Button>\n            </Typography>\n          </div>\n\n        </Paper>\n      </Grid>\n    </form>\n  );\n})\n\n let list=[];\n\nconst  Sidebar = (props) => {\n\n  const Submit = (app) => (data) => {\n\n    let list=[];\n\n\n    if (data.online===true)\n      list.push('online')\n    \n\n    if (data.paid===true)\n      list.push('paid')\n\n\n    if (data.hackathon===true)\n      list.push('хакатон')\n\n    if (data.vystav===true)\n      list.push('выставка')\n\n    if (data.forum===true)\n      list.push('форум')\n    \n    if (data.webinar===true)\n      list.push('вебинар')\n\n    if (data.master===true)\n      list.push('мастер-класс')\n\n    if (data.sorevnovan===true)\n      list.push('соревнование')\n\n    if (data.meetup===true)\n      list.push('митап')\n\n    if (data.onlinecourse===true)\n      list.push('курс')\n\n    if (data.conference===true)\n      list.push('конференция')\n\n      \n    app(props.currentUser, list)\n  }\n\n  return(\n\n    <Filter onSubmit={Submit(props.setLenta)}/>\n  );\n}\n\nconst lentaStateProps = (state) => ({\n  message: state.user.message,\n  currentUser: state.user.currentUser\n})\n\n\nexport default connect(lentaStateProps, {setLenta})(Sidebar)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Check, CheckBox } from '@material-ui/icons';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport { reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport {setCard} from './../../../reducers/userReducer'\nimport { Redirect } from 'react-router-dom';\nimport { Grid, Hidden } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 280,\n    height: 300,\n\n  },\n  media: {\n    height: 240,\n    paddingTop: '56.25%', // 16:9\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    '& > *': {\n    marginbottom: theme.spacing(3),\n    }\n  },\n  buttonsSide: {\n    '& > *': {\n      margin: theme.spacing(2),\n      alignItems: 'right',\n      alignSelf: \"end\",\n      textAlign: \"right\"\n    }\n  },\n}));\n\nconst Cardform = reduxForm({form: \"card\"})((props)=>{\n  const classes = useStyles();\n\n\n  return(\n      <form className={classes.form} onSubmit={props.handleSubmit}>\n\n        <CardActionArea type=\"submit\" >\n            <CardMedia\n              component=\"img\"\n              //alt=\"Contemplative Reptile\"\n              height=\"140\"\n              image={props.image_url}\n              //title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              \n              <Typography gutterBottom noWrap variant=\"h5\" component=\"h2\" >\n                {props.title}\n              </Typography>\n        \n              <Typography variant=\"body2\" color=\"textSecondary\" >\n                {props.short_info}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n\n\n        </form>\n        )\n    })\n\n  const Submit = (app, currentUser, id) => (data) => {\n    app(currentUser, id)\n    debugger\n    \n  }\n\nconst CardEvent = (props) => {\n  const classes = useStyles();\n\n  \n\n  if (props.iscard){\n    return <Redirect to=\"/event\"/>\n  }\n \ndebugger\n  return (\n    <Card className={classes.root}>\n\n      <Cardform short_info={props.short_info} \n       image_url={props.image_url} \n       title={props.title} \n        onSubmit={Submit(props.setCard, props.currentUser, props.id)}/>\n\n      <CardActions /*disableSpacing*/>\n      <div  className={classes.controls}>\n        {props.currentUser.length>3 ?\n        <Button color=\"default\" size=\"medium\"   >\n        в избранное\n        </Button> :\n          <Button color=\"default\" size=\"medium\" onClick={() => {alert('Вам необходимо войти на сайт для добавления мероприятия в избранное') }} \n         >\n            в избранное\n          </Button>\n        }\n      <GradeRoundedIcon color=\"secondary\"/>\n      </div>\n      </CardActions>\n     \n    </Card>\n  );\n}\n\nconst mapCardStateProps = (state) => ({\n  message: state.user.message,\n  currentUser: state.user.currentUser,\n  interests: state.user.interests,\n  lenta: state.user.lenta,\n  iscard: state.user.iscard,\n})\n\nexport default connect(mapCardStateProps, {setCard})(CardEvent)\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport CardEvent from './cardevent';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Events = (props) => {\r\n  //const { events } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3} className={classes.mainGrid}>\r\n          <Grid container item xs={9} spacing={3}>\r\n            {props.lenta.map((event) => (\r\n\r\n              <Grid item xs={3} sm={4} key={event._id}>\r\n              <CardEvent title={event.title}  image_url={\"https://source.unsplash.com/random/?programming,it,\"+event.title}\r\n              short_info= {event.startDate}  id={event._id}>\r\n              </CardEvent>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Grid container item xs={3} sm={3} md={3}>\r\n            <Sidebar date={\"fgf\"} format={\"fgbfn\"} where={\"mk\"} price={\"kjbjh\"} time={\"jhbjh\"} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapLentaStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  lenta: state.user.lenta,\r\n})\r\n\r\nexport default connect(mapLentaStateProps, {})(Events)\r\n\r\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Header from './Header';\nimport Events from './Events';\n\nimport {connect} from 'react-redux';\nimport {setLenta} from './../../../reducers/userReducer'\nimport {Redirect} from 'react-router-dom'\n\n\nconst sections = [\n  { title: 'Конференции', url: '#' },\n  { title: 'Хакатоны', url: '#' },\n  { title: 'Вебинары', url: '#' },\n  { title: 'Форумы', url: '#' },\n  { title: 'Онлайн-курсы', url: '#' },\n  { title: 'Стажировки', url: '#' },\n  { title: 'Семинары', url: '#' },\n  { title: 'Лекции', url: '#' },  \n];\n\nconst events = [\n  {\n    title: \"Directum Day 2020\",\n    image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\n    short_info: \"24 октября 9:30\",\n  },\n  {\n    title: \"Кейс-чемпионат\",\n    image_url: \"https://source.unsplash.com/random/?programming\",\n    short_info: \"24 октября 18:00\",\n  },\n  {\n    title: \"QA online meetup\",\n    image_url: \"https://source.unsplash.com/random/?programming,it\",\n    short_info: \"25 октября 16:30\",\n  },\n  {\n    title: \"Стажировка\",\n    image_url: \"https://source.unsplash.com/random/?science\",\n    short_info: \"26 октября 9:30\",\n  },\n  {\n    title: \"DevOps тренинг\",\n    image_url: \"https://source.unsplash.com/random/?computer\",\n    short_info: \"26 октября 15:00\",\n  },\n  {\n    title: \"Big Data Days 2020\",\n    image_url: \"https://source.unsplash.com/random/?it,event,programming\",\n    short_info: \"27 октября 10:00\",\n  },\n  {\n    title: \"Directum Day 2020\",\n    image_url: \"https://source.unsplash.com/random/?programming,it\",\n    short_info: \"27 октября 16:00\",\n  },\n  {\n    title: \"Directum Day 2020\",\n    image_url: \"https://source.unsplash.com/random/?event,it\",\n    short_info: \"28 октября 18:30\",\n  },\n  {\n    title: \"Directum Day 2020\",\n    image_url: \"https://source.unsplash.com/random/?event,programming\",\n    short_info: \"28 октября 19:30\",\n  },\n];\n\nconst Blog = (props) => {\n\n  const events = //props.card;\n  [\n    {\n      title: \"Directum Day 2020\",\n      image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\n      short_info: \"24 октября 9:30\",\n    },\n    {\n      title: \"Кейс-чемпионат\",\n      image_url: \"https://source.unsplash.com/random/?programming\",\n      short_info: \"24 октября 18:00\",\n    },\n    {\n      title: \"QA online meetup\",\n      image_url: \"https://source.unsplash.com/random/?programming,it\",\n      short_info: \"25 октября 16:30\",\n    },\n    {\n      title: \"Стажировка\",\n      image_url: \"https://source.unsplash.com/random/?science\",\n      short_info: \"26 октября 9:30\",\n    },\n    {\n      title: \"DevOps тренинг\",\n      image_url: \"https://source.unsplash.com/random/?computer\",\n      short_info: \"26 октября 15:00\",\n    },\n    {\n      title: \"Big Data Days 2020\",\n      image_url: \"https://source.unsplash.com/random/?it,event,programming\",\n      short_info: \"27 октября 10:00\",\n    },\n    {\n      title: \"Directum Day 2020\",\n      image_url: \"https://source.unsplash.com/random/?programming,it\",\n      short_info: \"27 октября 16:00\",\n    },\n    {\n      title: \"Directum Day 2020\",\n      image_url: \"https://source.unsplash.com/random/?event,it\",\n      short_info: \"28 октября 18:30\",\n    },\n    {\n      title: \"Directum Day 2020\",\n      image_url: \"https://source.unsplash.com/random/?event,programming\",\n      short_info: \"28 октября 19:30\",\n    },\n  ];\n\n\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header sections={sections} />\n        <main>\n          <Events events={events} />\n        </main>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst mapcardStateProps = (state) => ({\n  isLog: state.user.isLog,\n  message: state.user.message,\n  currentUser: state.user.currentUser\n})\n\nexport default connect(mapcardStateProps, {setLenta})(Blog)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport Blog from './Blog';\nimport {setLenta} from './../../../reducers/userReducer'\n\nclass lenta extends React.Component{\n\n  componentDidMount(){\n    this.props.setLenta(this.props.currentUser, false);\n  }\n  render(){\n  return (\n    <Blog />\n  );\n  }\n}\n\nconst mapStateProps = (state) => ({\n  message: state.user.message,\n  currentUser: state.user.currentUser,\n  lenta: state.user.lenta,\n  interests: state.user.interests\n})\n\nexport default connect(mapStateProps, {setLenta})(lenta)\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport {setlk} from './../../../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    align: 'right'\r\n  },\r\n}));\r\n\r\nconst ButtonLK = reduxForm({form: \"lk\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  onSubmit={props.handleSubmit}>\r\n    <Button variant=\"outlined\" color=\"default\" type=\"submit\" className={classes.button} size=\"medium\" >\r\n          Личный кабинет   \r\n    </Button>\r\n  </form>\r\n  )\r\n})\r\n\r\nconst ButtonEvent = reduxForm({form: \"event\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  onSubmit={props.handleSubmit}>\r\n    <Button size=\"medium\"   color=\"default\" type=\"submit\"> \r\n          <Typography\r\n       \r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            IT Events\r\n          </Typography>\r\n          </Button>   \r\n  </form>\r\n  )\r\n})\r\n\r\nconst Headers = (props) => {\r\n  const classes = useStyles();\r\n  \r\n    const SubmitButtonLK = (app) => (data) => {\r\n    app(false, props.currentUser)}\r\n\r\n    const SubmitButtonEvent = (app) => (data) => {\r\n      if (props.currentUser.length>3){\r\n        app(true, props.currentUser)\r\n      }\r\n      else {\r\n      app(true, '')\r\n      }\r\n    }\r\n\r\n    if (props.LK){\r\n        debugger\r\n        //props.LK=false;\r\n        return <Redirect to=\"/Anketa\"/>\r\n    }\r\n    else if (props.isEv){\r\n      debugger\r\n      return <Redirect to=\"/lenta\"/>\r\n    }\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar className={classes.toolbar}>\r\n\r\n        <ButtonEvent onSubmit={SubmitButtonEvent(props.setlk)} />\r\n        \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            \r\n          </Typography>\r\n        \r\n        {\r\n          props.isLog ? <ButtonLK onSubmit={SubmitButtonLK(props.setlk)}/> : \r\n          <Button variant=\"outlined\" color=\"default\" size=\"medium\" className={classes.button}  component={Link} to=\"/welcome\">\r\n          Войти\r\n          </Button>\r\n        }\r\n         \r\n\r\n         \r\n\r\n        </Toolbar>\r\n        \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst maplkStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  isPost: state.user.isPost,\r\n  isGet: state.user.isGet,\r\n  isExit: state.user.isExit,\r\n  isEvent: state.user.isEvent,\r\n  Ind: state.user.Ind,\r\n  LK: state.user.LK,\r\n  isLog: state.user.isLog,\r\n  isEv: state.user.isEv,\r\n})\r\n\r\nexport default connect(maplkStateProps, {setlk})(Headers)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 40,\r\n    height: 40,\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"center\"\r\n      \r\n      \r\n    },\r\n    margin: theme.spacing(1),\r\n    alignItems: 'right',\r\n    alignSelf: \"end\",\r\n    Align: \"right\",\r\n    position: 'right',\r\n\r\n\r\n  },\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n      \r\n    },\r\n  },\r\n}));\r\nconst MainFeaturedPost= (props) => {\r\n  const classes = useStyles();\r\n \r\n  return (\r\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${props.image_url})` }}>\r\n      {<img style={{ display: 'none' }} src={props.image_url} />}\r\n      <div className={classes.overlay} />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <div className={classes.mainFeaturedPostContent}>\r\n            <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" >\r\n              {props.title}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n              {props.short_info}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.buttonsSide}>\r\n          <div className={classes.buttonsSide}>\r\n      \r\n\r\n            \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card\r\n})\r\n\r\nexport default connect(mapStateProps, {})(MainFeaturedPost)\r\n","import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst styles = (theme) => ({\n  listItem: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h5',\n      },\n    },\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n    h4: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\n    },\n    p: { component: Typography, props: { paragraph: true } },\n    a: { component: Link },\n    li: {\n      component: withStyles(styles)(({ classes, ...props }) => (\n        <li className={classes.listItem}>\n          <Typography component=\"span\" {...props} />\n        </li>\n      )),\n    },\n  },\n};\n\nexport default function Markdown(props) {\n  return <ReactMarkdown options={options} {...props} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Markdown from './Markdown';\n\nconst useStyles = makeStyles((theme) => ({\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0),\n  },\n}));\n\nexport default function Main(props) {\n  const classes = useStyles();\n  const { posts} = props;\n\n  return (\n    <Grid item xs={12} md={8}>\n      <Divider />\n      {posts.map((post) => (\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n          {post}\n        </Markdown>\n      ))}\n    </Grid>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport cardevent from '../../lenta/src/cardevent';\r\nimport { Card } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  sidebarAbout: {\r\n    backgroundColor: theme.palette.grey[200],  \r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper elevation={3} className={classes.sidebarAboutBox}>\r\n        <Typography variant=\"h6\" className={classes.sidebarAbout} gutterBottom>\r\n          {\"Информация о событии\"}\r\n        </Typography>\r\n\r\n\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <TodayIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Начало мероприятия\" secondary={props.Card.startDate} />\r\n        </ListItem>\r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <TodayIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Конец мероприятия\" secondary={props.Card.endDate} />\r\n        </ListItem>\r\n\r\n       \r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <RoomOutlinedIcon />\r\n          </ListItemIcon>\r\n          { props.Card.tags[0]==='online' ? \r\n          <ListItemText primary=\"Место\" secondary={props.Card.tags[0]} />\r\n          :\r\n          <ListItemText primary=\"Место\" secondary={props.Card.location} /> \r\n          }\r\n          </ListItem> \r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <MonetizationOnOutlinedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Стоимость\"  secondary={props.Card.tags[2]} />\r\n        </ListItem>\r\n\r\n        \r\n      \r\n      </List>\r\n      <div className={classes.buttonsSide}>\r\n        {\r\n          props.currentUser.length>3 ? <Button variant=\"contained\" color=\"secondary\">в избранное</Button> :\r\n          <Button variant=\"contained\" \r\n          onClick={() => {alert('Вам необходимо войти на сайт для добавления мероприятия в избранное') }}  \r\n          color=\"secondary\">Добавить в избранное</Button>\r\n\r\n        }\r\n        \r\n        </div>\r\n\r\n      </Paper>  \r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapbarStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card\r\n})\r\n\r\nexport default connect(mapbarStateProps, {})(Sidebar)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Markdown from './text'\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardContent, Divider } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Event= (props) => {\r\n  const classes = useStyles();\r\n\r\n//let posts = props.Card.description;\r\n  return (\r\n    <React.Fragment>\r\n      <MainFeaturedPost title={props.Card.title} image_url={\"https://source.unsplash.com/random/?programming,it,\"+props.Card.title}  />\r\n\r\n      <Grid container spacing={5} className={classes.mainGrid}>\r\n          <Grid item xs={12} md={8}>\r\n          <Divider />\r\n          <Typography gutterBottom className={classes.markdown}  variant=\"overline\" component=\"h2\" >\r\n                {props.Card.description}\r\n              </Typography>\r\n        </Grid>\r\n       <Sidebar date={props.Card.startDate}  where={props.Card.tags[0]} price={props.Card.tags[2]} /> \r\n        \r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card\r\n})\r\n\r\nexport default connect(mapStateProps, {})(Event)","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Headers from './Headers';\nimport Event from './Event';\n\nconst sections = [\n  { title: 'Конференции', url: '#' },\n  { title: 'Хакатоны', url: '#' },\n  { title: 'Вебинары', url: '#' },\n  { title: 'Форумы', url: '#' },\n  { title: 'Онлайн-курсы', url: '#' },\n  { title: 'Стажировки', url: '#' },\n  { title: 'Семинары', url: '#' },\n  { title: 'Лекции', url: '#' },  \n];\n\nconst event = {\n    title: \"Directum Day 2020\",\n    image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\n    short_info: \"3 часа о самых актуальных кейсах. Авторитетные эксперты. Все, что нужно знать, чтобы выстроить эффективное взаимодействие сотрудников, повысить устойчивость компании и уверенно работать в любых условиях.\",\n    full_info: \"a\",\n    date: \"22 октября 2020\",\n    format: \"b\",\n    where: \"г. Санкт Петербург ул. проспект Просвещения дом 13 офис 405 \",\n    price: \"Бесплатно\",\n    time: \"9:30\"\n};\n\nexport default function Blogs() {\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Headers sections={sections} />\n        <main>\n          <Event event={event} />\n        </main>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Blogs from './Blogs';\n\n\nfunction event() {\n  return (\n    <Blogs />\n  );\n}\n\nReactDOM.render(<event />, document.getElementById('root'));\nexport default event;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\nimport Login from './Login';\nimport SignUp from './Signup';\nimport Anketa from './Anketa';\nimport lenta from './lenta/src/index';\nimport event from './event/src/index';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/welcome' component={Login}/>\n        <Route path='/Signup' component={SignUp} />\n        <Route path='/Anketa' component={Anketa} />\n\n        <Route path='/lenta' component={lenta} />\n        <Route path='/event' component={event} />\n\n        <Route path='/' component={lenta} />\n\n      \n        <Redirect to='/' component={lenta}/>\n\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ScreenRotation } from \"@material-ui/icons\";\n\nconst defaultState= {\n\n}\n\nexport default function fileReducer(state=defaultState, action){\n    switch(action.type){\n        default:\n            return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\nimport fileReducer from \"./FileReducer\";\nimport userReducer from \"./userReducer\";\nimport {reducer} from \"redux-form\"\n\nconst rootReducer = combineReducers( {\n    form: reducer,\n    user: userReducer,\n    files: fileReducer\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./reducers\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n   \n    document.getElementById('root')\n );\n\n\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}