{"version":3,"sources":["components/Copyright.js","API/userAPI.js","reducers/userReducer.js","components/Anketa.js","components/Login.js","components/Signup.js","components/Anketaf.js","components/lenta/src/Header.js","components/lenta/src/MainFeaturedPost.js","components/lenta/src/Markdown.js","components/lenta/src/Main.js","components/lenta/src/Sidebar.js","components/lenta/src/cardevent.js","components/lenta/src/Events.js","components/lenta/src/Blog.js","components/lenta/src/index.js","components/event/src/Headers.js","components/event/src/MainFeaturedPost.js","components/event/src/Markdown.js","components/event/src/Main.js","components/event/src/Sidebar.js","components/event/src/Event.js","components/event/src/Blogs.js","components/event/src/index.js","components/App.js","serviceWorker.js","reducers/FileReducer.js","reducers/index.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","ms","axios","baseURL","lentaAPI","token","tags","post","then","res","data","SET_AUTH","SET_LOG","SET_MESSAGE","SET_TOKEN","SET_POST","SET_LENTA","SET_INTERESTS","SET_GET","SET_EXIT","SET_EVENT","SET_IND","SET_LK","SET_CARD","SET_ISCARD","SET_EV","defaultState","currentUser","isAuth","message","isLog","lenta","interests","isPost","isGet","isExit","isEvent","Ind","LK","iscard","Card","isEv","inter","inds","setAuth","type","setLog","setMessage","setToken","setGet","setlenta","setExit","setEvent","setInd","setLK","isCard","setLenta","list","dispatch","err","toString","alert","setlk","event","get","params","AnketaGet","ind","setCard","id","CardGet","setcard","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","button","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","AuthForm","reduxForm","validate","values","errors","login","test","props","classes","submitting","pristine","className","onSubmit","handleSubmit","Field","component","required","fullWidth","name","autoComplete","autoFocus","Button","disabled","connect","state","user","setAuthorization","password","loginAPI","localStorage","setItem","response","app","to","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","getItem","justify","size","Box","mt","RegForm","FormControlLabel","control","Checkbox","value","setRegistration","regAPI","Container","maxWidth","toolbar","borderBottom","divider","position","orientation","justifyContent","toolbarTitle","flex","toolbarSecondary","overflowX","toolbarLink","padding","flexShrink","marginBottom","renderCheckbox","znak","changeInd","indexes","checked","onChange","AnketaForm","gutterBottom","startIcon","ButtonExit","ButtonClear","ButtonExitEvent","noWrap","Submit","Post","Get","Web","push","Gamedev","Mobile","Robot","DevOps","QA","DataScience","UI","Java","PHP","Python","Csharp","Cplus","CSS","HTML","JavaScript","React","Angular","Kotlin","hackathon","lecture","conference","onlinecourse","traineeship","forum","training","webinar","seminar","offline","online","moscow","petersburg","Anketa","exit","Event","clear","removeItem","put","AnketaPut","AnketaPost","newIndexes","slice","SubmitButton","SubmitButtonEvent","SubmitButtonClear","Fragment","Toolbar","anketa","this","Component","ButtonLK","mainFeaturedPost","grey","common","white","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","buttonsSide","alignSelf","textAlign","withStyles","listItem","markdown","typography","body2","sidebarAboutBox","Filter","paid","vystav","master","sorevnovan","meetup","media","paddingTop","controls","marginbottom","box","overflow","content","Cardform","CardActionArea","CardMedia","image_url","CardContent","title","short_info","CardActions","mainGrid","card","cardMedia","cardContent","flexGrow","map","key","_id","startDate","date","format","where","price","time","sections","url","events","ButtonEvent","Align","style","src","paragraph","sidebarAbout","paddingLeft","List","aria-label","ListItem","ListItemIcon","ListItemText","primary","endDate","location","Divider","description","full_info","window","pathname","Blogs","App","path","Login","SignUp","Boolean","hostname","match","rootReducer","combineReducers","reducer","action","files","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40bf6d4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {' © '}\r\n      <Link color=\"inherit\" href=\"https://github.com/unit-team-spbu\">\r\n        IT EVENTS\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;","import * as axios from 'axios';\r\n\r\nconst ms = axios.create({\r\n    baseURL: \"http://20.52.2.24:8000\"\r\n})\r\n\r\nexport const regAPI = (login, password) => {\r\n    debugger\r\n    return ms.post(\"/register/\", {login, password}).then(res=>res.data)\r\n}\r\n\r\nexport const loginAPI = (login, password) => {\r\n    return ms.post(\"/login/\", {login, password}).then(res=>res.data)\r\n}\r\n\r\nexport const lentaAPI = (token, tags) => {\r\n    \r\n    if(token && tags[0]){\r\n    return ms.post(\"/feed/\", {token, tags}).then(res=>res.data)\r\n    }\r\n    else if (token){\r\n        return ms.post(\"/feed/\", {token}).then(res=>res.data)\r\n    }\r\n    else if (tags[0]){\r\n        return ms.post(\"/feed/\", {tags}).then(res=>res.data)\r\n    }\r\n    else return ms.post(\"/feed/\", {}).then(res=>res.data)\r\n    \r\n}\r\n\r\nexport const AnketaPost = (token, interests, ind) => {\r\n    return ms.post(\"/profile/interests/\", {token, interests, ind}).then(res=>res.data)\r\n}\r\n\r\nexport const AnketaPut = (token, interests, ind) => {\r\n    return ms.put(\"/profile/interests/\", {token, interests,ind}).then(res=>res.data)\r\n}\r\n\r\nexport const AnketaGet = (token) => {\r\n    return ms.get(\"/profile/interests/\", {params: {token}}).then(res=>res.data)\r\n}\r\n\r\nexport const CardGet = (token, id) => {\r\n    if (token) {return ms.get(\"feed/\"+id+\"/\", {params: {token}}).then(res=>res.data) }\r\n    else \r\n    return ms.get(\"feed/\"+id+\"/\", {}).then(res=>res.data)\r\n}\r\n\r\n","import { AnketaGet, AnketaPost, AnketaPut, CardGet, regAPI } from \"../API/userAPI\";\r\nimport { loginAPI } from \"../API/userAPI\";\r\nimport { lentaAPI } from \"../API/userAPI\";\r\n\r\nconst SET_AUTH = \"SET_AUTH_USER_REDUCER\"\r\nconst SET_LOG = \"SET_LOG_USER_REDUCER\"\r\nconst SET_MESSAGE = \"SET_MESSAGE_USER_REDUCER\"\r\nconst SET_TOKEN = \"SET_TOKEN_USER_REDUCER\"\r\nconst SET_POST = \"SET_POST_USER_REDUCER\"\r\nconst SET_LENTA = \"SET_LENTA_USER_REDUCER\"\r\nconst SET_INTERESTS = \"SET_INTERESTS_USER_REDUCER\"\r\nconst SET_GET = \"SET_GET_USER_REDUCER\"\r\nconst SET_EXIT = \"SET_EXIT_USER_REDUCER\"\r\nconst SET_EVENT = \"SET_EVENT_USER_REDUCER\"\r\nconst SET_IND = \"SET_IND_USER_REDUCER\"\r\nconst SET_LK = \"SET_LK_USER_REDUCER\"\r\nconst SET_CARD = \"SET_CARD_USER_REDUCER\"\r\nconst SET_ISCARD = \"SET_ISCARD_USER_REDUCER\"\r\nconst SET_EV = \"SET_EV_USER_REDUCER\"\r\n\r\nconst defaultState= {\r\n    currentUser: \"\",\r\n    isAuth: false,\r\n    message: \"\",\r\n    isLog: false,\r\n    lenta: [],\r\n    interests: \"\",\r\n    isPost: false,\r\n    isGet: false,\r\n    isExit: false,\r\n    isEvent: false,\r\n    Ind: [false,false,false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false],\r\n    LK: false,\r\n    iscard: false,\r\n    Card: [],\r\n    isEv: false\r\n}\r\n\r\nexport default function userReducer(state=defaultState, action){\r\n    switch(action.type){\r\n        case SET_AUTH:\r\n            return{\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        case SET_IND:\r\n            return{\r\n                ...state,\r\n                Ind: action.Ind\r\n            }\r\n        case SET_EV:\r\n                return{\r\n                    ...state,\r\n                    isEv: action.isEv\r\n                }\r\n        case SET_LK:\r\n                return{\r\n                    ...state,\r\n                    LK: action.LK\r\n                }\r\n        case SET_EXIT:\r\n            return{\r\n                ...state,\r\n                isExit: action.isExit\r\n            }\r\n        case SET_LOG:\r\n            return{\r\n                ...state,\r\n                isLog: action.isLog\r\n            }\r\n        case SET_POST:\r\n            return{\r\n                ...state,\r\n                isPost: action.isPost\r\n            }\r\n        case SET_GET:\r\n            return{\r\n                ...state,\r\n                isGet: action.isGet\r\n            }\r\n        case SET_MESSAGE:\r\n            return{\r\n                ...state, \r\n                message: action.message\r\n            }\r\n        case SET_TOKEN:\r\n            return{\r\n                ...state, \r\n                 currentUser: action.currentUser\r\n            }   \r\n\r\n        case SET_LENTA:\r\n             return{\r\n            ...state, \r\n            lenta: action.lenta\r\n            }  \r\n        case SET_INTERESTS:\r\n            return{\r\n            ...state, \r\n            interests: action.interests\r\n            }     \r\n        case SET_EVENT:\r\n                return{\r\n                ...state, \r\n                isEvent: action.isEvent\r\n                }  \r\n                \r\n        case SET_ISCARD:\r\n            return{\r\n            ...state, \r\n            iscard: action.iscard\r\n            }\r\n        case SET_CARD:\r\n                return{\r\n                ...state, \r\n                Card: action.Card\r\n                }                    \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setAuth = (isAuth) => ({type: SET_AUTH, isAuth});\r\nconst setLog = (isLog) => ({type: SET_LOG, isLog});\r\nconst setMessage = (message) => ({type: SET_MESSAGE, message});\r\nconst setToken = (currentUser) => ({type: SET_TOKEN, currentUser});\r\nconst setPost = (isPost) => ({type: SET_POST, isPost});\r\nconst setGet = (isGet) => ({type: SET_GET, isGet});\r\nconst setlenta = (lenta) => ({type: SET_LENTA, lenta});\r\nconst setInterests = (interests) => ({type: SET_INTERESTS, interests});\r\nconst setExit = (isExit) => ({type: SET_EXIT, isExit});\r\nconst setEvent = (isEvent) => ({type: SET_EVENT, isEvent});\r\nconst setInd = (Ind) => ({type: SET_IND, Ind});\r\nconst setLK = (LK) => ({type: SET_LK, LK});\r\nconst setcard = (Card) => ({type: SET_CARD, Card});\r\nconst isCard = (iscard) => ({type: SET_ISCARD, iscard});\r\nconst isEv = (isEv) => ({type: SET_EV, isEv});\r\n\r\nexport const setRegistration = (login, password) => dispatch => {\r\n    regAPI(login, password).then(res=>{\r\n        dispatch(setAuth(true))\r\n        //alert(res.message) \r\n        debugger\r\n        dispatch(setAuth(false))\r\n    }, err=>{\r\n        debugger\r\n        dispatch(setMessage(err.toString()))\r\n        alert(err.response.data.message)\r\n    });\r\n    debugger\r\n    dispatch(setAuth(false))\r\n}\r\n\r\nexport const setAuthorization = (login,password,token) => dispatch => {\r\n\r\n     loginAPI(login, password).then(res=>{\r\n        localStorage.setItem('token',res.token)\r\n        dispatch(setToken(res.token))\r\n        dispatch(setExit(false))\r\n        dispatch(setEvent(false))\r\n        dispatch(setLog(true))\r\n        localStorage.setItem('log',true)\r\n        debugger\r\n\r\n        /*AnketaGet(res.token).then(res=>{\r\n            if (res.ind){\r\n              dispatch(setGet(true))\r\n              dispatch(setInd(res.ind))\r\n            }\r\n            dispatch(setExit(false))\r\n            dispatch(setEvent(false))\r\n            dispatch(setInterests(res.interests))\r\n            debugger\r\n \r\n        }, err=>{\r\n            debugger\r\n            dispatch(setMessage(err.toString()))\r\n            //alert(err.response.data.message)\r\n        });\r\n        debugger*/\r\n    }, err=>{\r\n        debugger\r\n        dispatch(setMessage(err.toString()))\r\n        alert(err.response.data.message)\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const setLenta = (token, list) => dispatch => {\r\n    lentaAPI(token, list).then(res=>{\r\n        dispatch(setlenta(res))\r\n        dispatch(setLK(false))\r\n        dispatch(setEvent(false))\r\n        dispatch(isCard(false))\r\n        //dispatch(isEv(true))\r\n        \r\n        //alert(\"Ok\")\r\n        debugger\r\n    }, err=>{\r\n        debugger\r\n        dispatch(setMessage(err.toString()))\r\n        alert(err.toString())\r\n    });\r\n}\r\n\r\nexport const changeInd = (id, indexes) => dispatch => {\r\n    let newIndexes = indexes.slice();\r\n    newIndexes[id] = !newIndexes[id];\r\n    dispatch(setInd(newIndexes));\r\n}\r\n\r\nexport const Anketa = (token, interests,inds, post, exit, get, Event,clear) => dispatch => {\r\n\r\n    if (Event){\r\n        dispatch(setLK(false))  \r\n        dispatch(isCard(false)) \r\n        dispatch(isEv(false)) \r\n        //dispatch(setEvent(true))\r\n    }\r\n    \r\n    else \r\n        if (exit){\r\n            localStorage.removeItem('token')\r\n            //dispatch(setPost(false))\r\n            dispatch(setGet(false))\r\n            dispatch(setInd([false,false,false,false,false,false,false,false,false,false,false,false,\r\n                false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,\r\n                false,false,false,false,false,false,false,false]))\r\n            dispatch(setToken(\"\"))\r\n            dispatch(setLog(false))\r\n            dispatch(setLK(false))\r\n            dispatch(isEv(false))\r\n            dispatch(setEvent(false))\r\n            dispatch(setExit(true))\r\n            alert(\"Вы вышли\") \r\n        }\r\n\r\n        else \r\n            if (post || get) {\r\n                    AnketaPut(token, interests, inds).then(res=>{\r\n                    dispatch(setExit(false))\r\n                    dispatch(setEvent(false))\r\n                    debugger\r\n                    alert(\"Ваша анкета обновлена\")\r\n                }, err=>{\r\n                    debugger\r\n                    dispatch(setMessage(err.toString()))\r\n                    alert(err.response.data.message)\r\n                });\r\n            }\r\n            else if (clear) {\r\n               debugger\r\n                dispatch(setInd([false,false,false,false,false,false,false,false,false,false,false,false,\r\n                    false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,\r\n                    false,false,false,false,false,false,false,false]))\r\n                dispatch(setExit(false))\r\n                dispatch(setEvent(false))\r\n               \r\n               \r\n            }\r\n                 else {\r\n                        AnketaPost(token, interests, inds).then(res=>{\r\n                                debugger\r\n                                dispatch(setPost(true))\r\n                                dispatch(setExit(false))\r\n                                dispatch(setEvent(false))\r\n                                localStorage.setItem('log',false);\r\n                                alert(\"Ваша анкета сохранена\")\r\n                            }, err=>{\r\n                                debugger\r\n                                dispatch(setMessage(err.toString()))\r\n                                //if (err.response.data.message\r\n                                alert(err.response.data.message)\r\n                            });\r\n                        }\r\n}\r\n\r\nexport const setlk = (event, token) => dispatch => {\r\n    if(event){\r\n        lentaAPI(token, false).then(res=>{\r\n            dispatch(setlenta(res))\r\n            dispatch(setLK(false))\r\n            dispatch(setEvent(false))\r\n            dispatch(isCard(false))\r\n            //dispatch(isEv(true))\r\n            \r\n            //alert(\"Ok\")\r\n            debugger\r\n        }, err=>{\r\n            debugger\r\n            dispatch(setMessage(err.toString()))\r\n            alert(err.toString())\r\n        });\r\n    }\r\n    else {\r\n        AnketaGet(token).then(res=>{\r\n            if (res.ind){\r\n                dispatch(setGet(true))\r\n                dispatch(setInd(res.ind))\r\n            }\r\n            dispatch(setExit(false))\r\n            dispatch(setEvent(false))\r\n            dispatch(isEv(false))\r\n            dispatch(isCard(false))\r\n            //dispatch(setLK(true))\r\n            debugger\r\n        }, err=>{\r\n            debugger\r\n            //console.log(err);\r\n            dispatch(setMessage(err.toString()))\r\n            //alert(err.toString())\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport const setCard = (token, id) =>  dispatch => {\r\n      CardGet(token, id).then(res=>{ \r\n        //dispatch(isCard(false))\r\n         dispatch(setcard(res))  \r\n         dispatch(isCard(true))\r\n         //localStorage.setItem('iscard',true)\r\n        dispatch(setEvent(false))\r\n        dispatch(isEv(false))\r\n        debugger\r\n    }, err=>{\r\n        debugger\r\n        dispatch(setMessage(err.toString()))\r\n        alert(err.toString())\r\n    });\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport Copyright from './Copyright';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Anketa, changeInd} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   toolbar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        width: '100%',\r\n        position: 'right',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        orientation: 'center',\r\n        justifyContent: 'right',\r\n      },\r\n    toolbarTitle: {\r\n        flex: 1,\r\n      },\r\n    toolbarSecondary: {\r\n        justifyContent: 'space-between',\r\n        overflowX: 'auto',\r\n      },\r\n    toolbarLink: {\r\n        padding: theme.spacing(1),\r\n        flexShrink: 0,\r\n      },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    //marginBottom: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '200%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 3, 2),\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n    align: 'justify'\r\n  },\r\n}));  \r\n\r\nconst renderCheckbox = ({ input, label, znak, ind, changeInd, indexes }) => (\r\n  <div>\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        checked={znak ? true : false}\r\n        onChange={ () => {\r\n          \r\n          changeInd(ind, indexes)} }\r\n      />\r\n    }\r\n    label={label}\r\n  />\r\n</div>\r\n)\r\n\r\n\r\nconst AnketaForm = reduxForm({form: \"anketa\"})((props)=>{\r\n    const classes = useStyles(); \r\n    \r\n    return(\r\n     \r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n          \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\">\r\n                        1) Интересующии вас сферы IT\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Web\"}\r\n                        id=\"Web\"\r\n                        control={<Checkbox checked={props.Ind[0]} value={props.Ind[0]} color=\"secondary\" />}\r\n                        label=\"WEB\" \r\n                        znak={props.Ind[0]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {0}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Gamedev\"}\r\n                        id=\"Gamedev\"\r\n                        control={<Checkbox checked={props.Ind[1]} value=\"GD\" color=\"secondary\" />}\r\n                        label=\"Gamedev\"\r\n                        znak={props.Ind[1]}\r\n                        indexes = {props.Ind}\r\n                        changeInd = {props.changeInd}\r\n                        ind = {1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"Mobile\"}\r\n                         id=\"Mobile\"\r\n                        control={<Checkbox value=\"mobile\" checked={props.Ind[2]} color=\"secondary\" />}\r\n                        label=\"Мобильная разработка\"\r\n                        znak={props.Ind[2]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {2}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Robot\"}\r\n                        id=\"Robot\"\r\n                        control={<Checkbox value=\"robot\" color=\"secondary\" checked={props.Ind[3]} />}\r\n                        label=\"Робототехника\"\r\n                        znak={props.Ind[3]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {3}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"DevOps\"}\r\n                        id=\"DevOps\"\r\n                        control={<Checkbox value=\"devops\" checked={props.Ind[4]} color=\"secondary\" />}\r\n                        label=\"DevOps\"\r\n                        znak={props.Ind[4]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {4}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"QA\"}\r\n                        id=\"QA\"\r\n                        control={<Checkbox value=\"qa\" checked={props.Ind[5]} color=\"secondary\" />}\r\n                        label=\"QA\"\r\n                        znak={props.Ind[5]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {5}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"DataScience\"}\r\n                        id=\"DataScience\"\r\n                        control={<Checkbox value=\"ds\" checked={props.Ind[6]} color=\"secondary\" />}\r\n                        label=\"DataScience\"\r\n                        znak={props.Ind[6]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {6}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"UI\"}\r\n                         id=\"UI\"\r\n                        control={<Checkbox value=\"ui\" checked={props.Ind[7]}  color=\"secondary\" />}\r\n                        label=\"UI/UX\"\r\n                        znak={props.Ind[7]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {7}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n      \r\n\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\" gutterBottom>\r\n                        2) Интересующии вас языки программирования\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Java\"}\r\n                        id=\"Java\"\r\n                        control={<Checkbox value=\"java\" checked={props.Ind[8]} color=\"secondary\" />}\r\n                        label=\"Java\"\r\n                        znak={props.Ind[8]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {8}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"PHP\"}\r\n                        id=\"PHP\"\r\n                        control={<Checkbox value=\"php\" checked={props.Ind[9]} color=\"secondary\" />}\r\n                        label=\"PHP\"\r\n                        znak={props.Ind[9]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {9}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Python\"}\r\n                        id=\"Python\"\r\n                        control={<Checkbox value=\"python\" checked={props.Ind[10]} color=\"secondary\" />}\r\n                        label=\"Python\"\r\n                        znak={props.Ind[10]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {10}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Csharp\"}\r\n                        id=\"Csharp\"\r\n                        control={<Checkbox value=\"ch\" checked={props.Ind[11]} color=\"secondary\" />}\r\n                        label=\"C#\"\r\n                        znak={props.Ind[11]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {11}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Cplus\"}\r\n                        id=\"Cplus\"\r\n                        control={<Checkbox value=\"c\" checked={props.Ind[12]} color=\"secondary\" />}\r\n                        label=\"C++\"\r\n                        znak={props.Ind[12]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {12}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"CSS\"}\r\n                        id=\"CSS\"\r\n                        control={<Checkbox value=\"css\" checked={props.Ind[13]} color=\"secondary\" />}\r\n                        label=\"CSS\"\r\n                        znak={props.Ind[13]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {13}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"HTML\"}\r\n                        id=\"HTML\"\r\n                        control={<Checkbox value=\"html\" checked={props.Ind[14]} color=\"secondary\" />}\r\n                        label=\"HTML\"\r\n                        znak={props.Ind[14]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {14}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"JavaScript\"}\r\n                        id=\"JavaScript\"\r\n                        control={<Checkbox value=\"jvs\" checked={props.Ind[15]} color=\"secondary\" />}\r\n                        label=\"JavaScript\"\r\n                        znak={props.Ind[15]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {15}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"React\"}\r\n                        id=\"React\"\r\n                        control={<Checkbox value=\"react\" checked={props.Ind[16]} color=\"secondary\" />}\r\n                        label=\"React\"\r\n                        znak={props.Ind[16]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {16}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Angular\"}\r\n                        id=\"Angular\"\r\n                        control={<Checkbox value=\"ang\" checked={props.Ind[17]} color=\"secondary\" />}\r\n                        label=\"Angular\"\r\n                        znak={props.Ind[17]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {17}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"Kotlin\"}\r\n                        id=\"Kotlin\"\r\n                        control={<Checkbox value=\"kotl\" checked={props.Ind[18]} color=\"secondary\" />}\r\n                        label=\"Kotlin\"\r\n                        znak={props.Ind[18]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {18}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n      \r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\" variant=\"h6\">\r\n                        3) Интересующии вас мероприятия IT\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"hackathon\"}\r\n                        id=\"hackathon\"\r\n                        control={<Checkbox value=\"hak\" checked={props.Ind[19]} color=\"secondary\" />}\r\n                        label=\"Хакатон\"\r\n                        znak={props.Ind[19]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {19}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"lecture\"}\r\n                        id=\"lecture\"\r\n                        control={<Checkbox value=\"lek\" checked={props.Ind[20]} color=\"secondary\" />}\r\n                        label=\"Лекция\"\r\n                        znak={props.Ind[20]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {20}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}sm={4} >\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"conference\"}\r\n                        id=\"conference\"\r\n                        control={<Checkbox value=\"konf\" checked={props.Ind[21]} color=\"secondary\" />}\r\n                        label=\"Конференция\"\r\n                        znak={props.Ind[21]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {21}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"onlinecourse\"}\r\n                        id=\"onlinecourse\"\r\n                        control={<Checkbox value=\"onl\" checked={props.Ind[22]} color=\"secondary\" />}\r\n                        label=\"Онлайн-курс\"\r\n                        znak={props.Ind[22]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {22}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"traineeship\"}\r\n                        id=\"traineeship\"\r\n                        control={<Checkbox value=\"sta\" checked={props.Ind[23]} color=\"secondary\" />}\r\n                        label=\"Стажировка\"\r\n                        znak={props.Ind[23]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {23}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"forum\"}\r\n                        id=\"forum\"\r\n                        control={<Checkbox value=\"for\"checked={props.Ind[24]} color=\"secondary\" />}\r\n                        label=\"Форум\"\r\n                        znak={props.Ind[24]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {24}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"training\"}\r\n                        id=\"training\"\r\n                        control={<Checkbox value=\"tren\" checked={props.Ind[25]} color=\"secondary\" />}\r\n                        label=\"Тренинг\"\r\n                        znak={props.Ind[25]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {25}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"webinar\"}\r\n                        id=\"webinar\"\r\n                        control={<Checkbox value=\"webin\" checked={props.Ind[26]} color=\"secondary\" />}\r\n                        label=\"Вебинар\"\r\n                        znak={props.Ind[26]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {26}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"seminar\"}\r\n                        id=\"seminar\"\r\n                        control={<Checkbox value=\"semin\" checked={props.Ind[27]} color=\"secondary\" />}\r\n                        label=\"Семинар\"\r\n                        znak={props.Ind[27]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {27}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        \r\n\r\n        \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\"  variant=\"h6\" gutterBottom>\r\n                        4) Предпочтительный формат\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"offline\"}\r\n                        id=\"offline\"\r\n                        control={<Checkbox value=\"ochno\" checked={props.Ind[28]} color=\"secondary\" />}\r\n                        label=\"Очно\"\r\n                        znak={props.Ind[28]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {28}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} >\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"online\"}\r\n                        id=\"online\"\r\n                        control={<Checkbox value=\"zaochno\" checked={props.Ind[29]}  color=\"secondary\" />}\r\n                        label=\"Заочно\"\r\n                        znak={props.Ind[29]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {29}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n       \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <Typography  align=\"left\" component=\"h1\"  variant=\"h6\" gutterBottom>\r\n                        5) Предпочтительный город\r\n                    </Typography>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                         name={\"moscow\"}\r\n                         id=\"moscow\"\r\n                        control={<Checkbox value=\"moscow\" checked={props.Ind[30]} color=\"secondary\" />}\r\n                        label=\"Москва\"\r\n                        znak={props.Ind[30]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {30}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Field  component={renderCheckbox}\r\n                        name={\"petersburg\"}\r\n                        id=\"petersburg\"\r\n                        control={<Checkbox value=\"saint\" checked={props.Ind[31]} color=\"secondary\" />}\r\n                        label=\"Санк-Петербург\"\r\n                        znak={props.Ind[31]}\r\n                        changeInd = {props.changeInd}\r\n                        indexes = {props.Ind}\r\n                        ind = {31}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n       \r\n           \r\n            <Grid  className={classes.paper}  alignItems=\"center\" justify=\"center\">\r\n                    <Button\r\n                    id=\"save\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    startIcon={<SaveIcon />}\r\n                    className={classes.button}\r\n                    >\r\n                    Сохранить       \r\n                    </Button>\r\n              </Grid>\r\n\r\n        </form>\r\n        )\r\n    })\r\n\r\n    const ButtonExit = reduxForm({form: \"exit\"})((props)=>{\r\n      return(\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <Button id=\"exit\" name=\"exit\"  color=\"default\" type=\"submit\"  variant=\"outlined\"  size=\"medium\" >\r\n              Выйти\r\n            </Button>\r\n        </form>\r\n        )\r\n      })\r\n\r\n      const ButtonClear = reduxForm({form: \"clear\"})((props)=>{\r\n        const classes = useStyles();\r\n        return(\r\n          <form  onSubmit={props.handleSubmit}>\r\n              <Button  id=\"save\"  \r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    //color=\"primary\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    startIcon={<DeleteIcon />}\r\n        >\r\n                Очистить\r\n              </Button>\r\n          </form>\r\n          )\r\n        })\r\n\r\n      const ButtonExitEvent = reduxForm({form: \"exit\"})((props)=>{\r\n        return(\r\n          <form  >\r\n          <Button size=\"medium\" color=\"default\" id=\"itEvent\" component={Link} to=\"/lenta\" name=\"itEvent\" type=\"submit\"  >\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n          >\r\n            IT Events\r\n            </Typography>\r\n            </Button> \r\n\r\n        </form>\r\n        )\r\n      })\r\n\r\n      let inter;\r\n      let inds;\r\n\r\n      const Submit = (app,currentUser,Post,Get, tags) => (data) => {\r\n        \r\n        inter=[];\r\n        inds=[];\r\n    \r\n        if (data.Web || tags[0]){\r\n            inter.push('Web')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Gamedev===true || tags[1]){\r\n            inter.push('Gamedev')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Mobile===true || tags[2]){\r\n          inter.push('Mobile')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Robot===true || tags[3]){\r\n          inter.push('Robot')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.DevOps===true || tags[4]){\r\n          inter.push('DevOps')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.QA===true || tags[5]){\r\n          inter.push('QA')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.DataScience===true || tags[6]){\r\n          debugger\r\n          inter.push('DataScience')\r\n          inds.push(true);\r\n        }\r\n        else{\r\n        debugger\r\n          inds.push(false); \r\n        }\r\n        if (data.UI===true || tags[7]){\r\n          inter.push('UI')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Java===true || tags[8]){\r\n          inter.push('Java')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.PHP===true || tags[9]){\r\n          inter.push('PHP')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Python===true || tags[10]){\r\n          inter.push('Python')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Csharp===true || tags[11]){\r\n          inter.push('Csharp')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Cplus===true || tags[12]){\r\n          inter.push('Cplus')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n        \r\n        if (data.CSS===true || tags[13]){\r\n          inter.push('CSS')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.HTML===true || tags[14]){\r\n          inter.push('HTML')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.JavaScript===true || tags[15]){\r\n          inter.push('JavaScript')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.React===true || tags[16]){\r\n          inter.push('React')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n    \r\n        if (data.Angular===true || tags[17]){\r\n          inter.push('Angular')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.Kotlin===true || tags[18]){\r\n          inter.push('Kotlin')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.hackathon===true || tags[19]){\r\n            inter.push('hackathon')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n      \r\n        if (data.lecture===true || tags[20]){\r\n            inter.push('lecture')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false);\r\n    \r\n        if (data.conference===true || tags[21]){\r\n              inter.push('conference')\r\n              inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n    \r\n        if (data.onlinecourse===true || tags[22]){\r\n              inter.push('onlinecourse')\r\n              inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false);\r\n          \r\n          \r\n        if (data.traineeship===true || tags[23]){\r\n          inter.push('traineeship')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n          \r\n        if (data.forum===true || tags[24]){\r\n            inter.push('forum')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n          \r\n        if (data.training===true || tags[25]){\r\n          inter.push('training')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.webinar===true || tags[26]){\r\n            inter.push('webinar')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n      \r\n        if (data.seminar===true || tags[27]){\r\n            inter.push('seminar')\r\n            inds.push(true);\r\n        }\r\n        else\r\n            inds.push(false); \r\n       \r\n    \r\n        if (data.offline || tags[28]){\r\n            inter.push('offline')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.online===true || tags[29]){\r\n            inter.push('online')\r\n            inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false);   \r\n          \r\n          \r\n        if (data.moscow===true || tags[30]){\r\n          inter.push('moscow')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n        if (data.petersburg===true || tags[31]){\r\n          inter.push('petersburg')\r\n          inds.push(true);\r\n        }\r\n        else\r\n          inds.push(false); \r\n    \r\n    \r\n          \r\n        app(currentUser, inter, inds, Post,false, Get)\r\n      }\r\n\r\nconst AnketaProps = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  const SubmitButton = (app) => (data) => {\r\n    app(localStorage.getItem('token'),[] ,[], false, true, false)\r\n    debugger\r\n  }\r\n\r\n  const SubmitButtonEvent = (app) => (data) => {\r\n    app(localStorage.getItem('token'),[],[], false, false,false, true)\r\n    \r\n  }\r\n  const SubmitButtonClear = (app) => (data) => {\r\n    app(localStorage.getItem('token'),[],[], false, false,false,false,true)\r\n    \r\n  }\r\n  \r\n  if (props.isEvent || props.isExit){\r\n    //props.isEvent=false;\r\n    //props.isExit=false;\r\n    debugger\r\n    return <Redirect to=\"/lenta\"/>\r\n  }\r\n\r\n  if (props.Ind[35]){\r\n    debugger\r\n    props.Ind[35]=false;\r\n    return (\r\n\r\n      <React.Fragment>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n\r\n      <ButtonExitEvent onSubmit={SubmitButtonEvent(props.Anketa)}/>\r\n\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h5\"\r\n        color=\"inherit\"\r\n        align=\"right\"\r\n        noWrap\r\n        className={classes.toolbarTitle}\r\n      >\r\n      \r\n      </Typography>\r\n\r\n      <ButtonExit onSubmit={SubmitButton(props.Anketa)}/>\r\n\r\n      </Toolbar>\r\n   \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Анкета регистрации\r\n        </Typography>\r\n       \r\n        <AnketaForm Ind={props.Ind} changeInd = {props.changeInd} onSubmit={Submit( props.Anketa, localStorage.getItem('token'), props.isPost, props.isGet, props.Ind)}/>\r\n        <ButtonClear onSubmit={SubmitButtonClear(props.Anketa)}/>\r\n\r\n       \r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </React.Fragment> \r\n  );\r\n//return <Redirect to=\"/Anketa\"/>\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n\r\n      <React.Fragment>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n\r\n      <ButtonExitEvent onSubmit={SubmitButtonEvent(props.Anketa)}/>\r\n\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"h5\"\r\n        color=\"inherit\"\r\n        align=\"right\"\r\n        noWrap\r\n        className={classes.toolbarTitle}\r\n      >\r\n      \r\n      </Typography>\r\n\r\n      <ButtonExit onSubmit={SubmitButton(props.Anketa)}/>\r\n\r\n      </Toolbar>\r\n   \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Анкета регистрации\r\n        </Typography>\r\n       \r\n        <AnketaForm Ind={props.Ind}  changeInd = {props.changeInd} onSubmit={Submit(props.Anketa, localStorage.getItem('token'), props.isPost, props.isGet, props.Ind)}/>\r\n        <ButtonClear onSubmit={SubmitButtonClear(props.Anketa)}/>\r\n\r\n       \r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </React.Fragment> \r\n  );\r\n\r\n}\r\nconst mapAnketaStateProps = (state) => ({\r\n    message: state.user.message,\r\n    currentUser: state.user.currentUser,\r\n    interests: state.user.interests,\r\n    isPost: state.user.isPost,\r\n    isGet: state.user.isGet,\r\n    isExit: state.user.isExit,\r\n    isEvent: state.user.isEvent,\r\n    Ind: state.user.Ind\r\n  })\r\n  \r\n  export default connect(mapAnketaStateProps, {Anketa, changeInd})(AnketaProps)","import React from 'react';\r\n\r\n//import { Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Copyright from './Copyright';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setAuthorization} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { LinkOffSharp } from '@material-ui/icons';\r\nimport setAuth from './../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random/?programming,it)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },  \r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    \r\n    //marginTop: theme.spacing(1),\r\n    //display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n   \r\n  },\r\n}));\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n \r\n  /*if (values.firstName.length > 12) {\r\n    errors.firstName = 'Максимальная длина 12'\r\n  }*/\r\n  /*if (values.lastName.length > 15) {\r\n    errors.lastName = 'Максимальная длина 15'\r\n  }*/\r\n  if (\r\n    values.login &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n  ) {\r\n    errors.login = 'Неверный адрес почты'\r\n  }\r\n  \r\n  /*if (values.password.length < 8) {\r\n    errors.firstName = 'Минимальная длина 8'\r\n  }*/\r\n\r\n /* const beginWithoutDigit = /^\\D.*$/\r\n  const withoutSpecialChars = /^[^-() /]*$/\r\n  const containsLetters = /^.*[a-zA-Z]+.*$/\r\n  const withoutSpaces = /^[\\S]$/\r\n\r\nif( beginWithoutDigit.test(values.password) &&\r\n    withoutSpecialChars.test(values.password) &&\r\n    containsLetters.test(values.password) ){\r\n} else {\r\n    errors.login = 'Необходимо наличие: цифор,спец.символов и латинских букв'\r\n}\r\n\r\nif( withoutSpaces.test(values.password)){\r\n} else {\r\n    errors.login = 'Пробелы недопустимы'\r\n}\r\n*/\r\n\r\n  return errors\r\n}\r\n\r\n   const renderTextField = ({\r\n      label, input, \r\n      meta:{ touched, invalid, error},\r\n        ...custom}) => (\r\n          <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid} \r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}/>\r\n        )\r\n\r\nconst AuthForm = reduxForm({form: \"auth\", validate}) ((props)=>{\r\n    const classes = useStyles();\r\n    const {  pristine, submitting} = props\r\n    return(\r\n      <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={renderTextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"login\"\r\n              label=\"Электронная почта\"\r\n              name=\"login\"\r\n              autoComplete=\"login\"\r\n              autoFocus\r\n            />\r\n           <Field component={renderTextField}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              disabled={ submitting}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Войти\r\n            </Button>\r\n            \r\n          </form>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\nconst Submit = (app, currentUser) => (data) => {\r\n  app(data.login, data.password, currentUser )\r\n}\r\n\r\n  if (props.isLog){\r\n    debugger\r\n  //alert(props.interests+props.currentUser+props.isGet+props.Ind[0])\r\n  return <Redirect to=\"/Anketa\"/>\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Заходите на сайт, всегда Вам рады!\r\n          </Typography>\r\n        \r\n\r\n          <AuthForm onSubmit={Submit(props.setAuthorization, localStorage.getItem('token'))}/>\r\n\r\n         \r\n     \r\n          <Grid container className={classes.button}  justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button  size=\"small\"  color=\"primary\" component={Link} to=\"/Signup\">\r\n                  Нет учетной записи? Регистрация\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.button}  justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button  size=\"small\"  color=\"primary\" component={Link} to=\"/lenta\">\r\n                 IT EVENTS\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n            \r\n\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  isLog: state.user.isLog,\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  isGet: state.user.isGet,\r\n  Ind: state.user.Ind\r\n})\r\n\r\nexport default connect(mapStateProps, {setAuthorization})(Login)","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport setAuth from './../reducers/userReducer'\r\n\r\n\r\nimport Copyright from './Copyright';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setRegistration} from './../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  button: {\r\n    //marginTop: theme.spacing(8),\r\n    //display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n\r\n}));\r\n\r\n\r\n  \r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n \r\n  /*if (values.firstName.length > 12) {\r\n    errors.firstName = 'Максимальная длина 12'\r\n  }*/\r\n  /*if (values.lastName.length > 15) {\r\n    errors.lastName = 'Максимальная длина 15'\r\n  }*/\r\n  if (\r\n    values.login &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n  ) {\r\n    errors.login = 'Неверный адрес почты'\r\n  }\r\n\r\n /* if (values.password.length < 8) {\r\n    errors.firstName = 'Минимальная длина 8'\r\n  }*/\r\n\r\n /* const beginWithoutDigit = /^\\D.*$/\r\n  const withoutSpecialChars = /^[^-() /]*$/\r\n  const containsLetters = /^.*[a-zA-Z]+.*$/\r\n  const withoutSpaces = /^[\\S]$/\r\n\r\nif( beginWithoutDigit.test(values.password) &&\r\n    withoutSpecialChars.test(values.password) &&\r\n    containsLetters.test(values.password) ){\r\n} else {\r\n    errors.login = 'Необходимо наличие: цифор,спец.символов и латинских букв'\r\n}\r\n\r\nif( withoutSpaces.test(values.password)){\r\n} else {\r\n    errors.login = 'Пробелы недопустимы'\r\n}\r\n*/\r\n\r\n  return errors\r\n}\r\n\r\n   const renderTextField = ({\r\n      label, input, \r\n      meta:{ touched, invalid, error},\r\n        ...custom}) => (\r\n          <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid} \r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}/>\r\n        )\r\n\r\nconst RegForm = reduxForm({form: \"reg\", validate})((props)=>{\r\n  const classes = useStyles();\r\n  const {  pristine, submitting} = props\r\n  return(\r\n    <form className={classes.form} onSubmit={props.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={5}>\r\n              <Field component={renderTextField}\r\n                    autoComplete=\"firstName\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"Ваше имя\"\r\n                    autoFocus\r\n              />\r\n        \r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n              <Field component={renderTextField}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Ваша фамилия\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"/>\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field component={renderTextField}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"login\"\r\n                label=\"Электронная почта\"\r\n                name=\"login\"\r\n                autoComplete=\"login\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field component={renderTextField}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field \r\n                name={\"checkbox\"}\r\n                component ={FormControlLabel}\r\n                control={<Checkbox value=\"allowExtralogins\" color=\"primary\" />}\r\n                label=\"Я хочу получать различные предложения и уведомления по электронной почте.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            disabled={submitting}\r\n            color=\"primary\"\r\n            className={classes.submit}>\r\n            Начать\r\n          </Button>\r\n        \r\n        </form>\r\n  )\r\n})\r\n\r\nconst Submit = (app) => (data) => {\r\n  app(data.login, data.password)\r\n}\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const classes = useStyles();\r\n \r\n  if (props.isAuth){\r\n    debugger;\r\n  return <Redirect to=\"/welcome\"/>\r\n  }\r\n\r\n  else return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Регистрация\r\n        </Typography>\r\n \r\n        <RegForm onSubmit={Submit(props.setRegistration)}/>\r\n\r\n        <Grid container className={classes.button} justify=\"flex-end\">\r\n          <Grid item>\r\n            <Button  size=\"small\" color=\"primary\" component={Link} to=\"/welcome\">\r\n              Уже зарегистрированы? Войти\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className={classes.button} justify=\"flex-end\">\r\n          <Grid item>\r\n            <Button  size=\"small\" color=\"primary\" component={Link} to=\"/lenta\">\r\n              IT EVENTS\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.user.isAuth,\r\n    message: state.user.message\r\n})\r\n\r\nexport default connect(mapStateToProps, {setRegistration })(SignUp)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AnketaProps from './Anketa';\r\nimport {setlk} from './../reducers/userReducer'\r\n\r\nclass anketa extends React.Component{\r\n\r\n  componentDidMount(){\r\n\r\n    this.props.setlk(false, localStorage.getItem('token'));\r\n    \r\n   \r\n  }\r\n\r\n  render(){\r\n    //if (this.props.Ind[35] ) this.props.Ind[35]=false;\r\n    //debugger\r\n  return (\r\n    <AnketaProps />\r\n  );\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  lenta: state.user.lenta,\r\n  interests: state.user.interests,\r\n  Card: state.user.Card,\r\n  isPost: state.user.isPost,\r\n    isGet: state.user.isGet,\r\n    isExit: state.user.isExit,\r\n    isEvent: state.user.isEvent,\r\n    Ind: state.user.Ind,\r\n    isLog: state.user.isLog, \r\n})\r\n\r\nexport default connect(mapStateProps, {setlk})(anketa)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport {setlk} from './../../../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    align: 'right'\r\n  },\r\n}));\r\n\r\nconst ButtonLK = reduxForm({form: \"lk\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form >\r\n    <Button variant=\"outlined\" component={Link} to=\"/Anketa\" color=\"default\"  className={classes.button} size=\"medium\" >\r\n          Личный кабинет   \r\n    </Button>\r\n  </form>\r\n  )\r\n})\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  \r\n    const SubmitButtonLK = (app) => (data) => {\r\n      app(false, localStorage.getItem('token'))}\r\n\r\n    /*if (props.LK){\r\n        debugger\r\n        //props.LK=false;\r\n        return <Redirect to=\"/Anketa\"/>\r\n    }*/\r\n    debugger\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar className={classes.toolbar}>\r\n\r\n          <Button size=\"medium\" color=\"default\" component={Link} to=\"/lenta\" > \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            IT Events\r\n          </Typography>\r\n          </Button>   \r\n        \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n      \r\n          </Typography>\r\n          \r\n        \r\n        {\r\n          localStorage.getItem('token') ? <ButtonLK /*onSubmit={SubmitButtonLK(props.setlk)}*//> : \r\n          <Button variant=\"outlined\" color=\"default\" align=\"right\" size=\"medium\"   className={classes.button} component={Link} to=\"/welcome\">\r\n          Войти\r\n          </Button>\r\n        }\r\n         \r\n\r\n         \r\n\r\n        </Toolbar>\r\n        \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst maplkStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  isPost: state.user.isPost,\r\n  isGet: state.user.isGet,\r\n  isExit: state.user.isExit,\r\n  isEvent: state.user.isEvent,\r\n  Ind: state.user.Ind,\r\n  LK: state.user.LK,\r\n  isLog: state.user.isLog,\r\n})\r\n\r\nexport default connect(maplkStateProps, {setlk})(Header)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n      \r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainFeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { title, image_url, short_info } = props;\r\n\r\n  return (\r\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${image_url})` }}>\r\n      {<img style={{ display: 'none' }} src={image_url} />}\r\n      <div className={classes.overlay} />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <div className={classes.mainFeaturedPostContent}>\r\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" >\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n              {short_info}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.buttonsSide}>\r\n          <div className={classes.buttonsSide}>\r\n            <IconButton>\r\n              <GradeRoundedIcon fontSize=\"large\" color=\"secondary\"  />\r\n            </IconButton>\r\n\r\n            \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n\r\n  );\r\n}\r\n\r\nMainFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\n\r\nconst styles = (theme) => ({\r\n  listItem: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'h5',\r\n      },\r\n    },\r\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\r\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\r\n    h4: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\r\n    },\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    a: { component: Link },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      )),\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Markdown(props) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Markdown from './Markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const { posts} = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={8}>\r\n      <Divider />\r\n      {posts.map((post) => (\r\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\r\n          {post}\r\n        </Markdown>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Box } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {setLenta} from './../../../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n/*function ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}*/\r\nconst renderCheckbox = ({ input, label }) => (\r\n  <div>\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={input.value ? true : false}\r\n          onChange={input.onChange}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  </div>\r\n)\r\n\r\nconst Filter = reduxForm({ form: \"filter\" }) ((props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={props.handleSubmit}>\r\n      <Grid item xs={12} md={12}>\r\n        <Paper elevation={4} className={classes.sidebarAboutBox}>\r\n         \r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\r\n                  Формат мероприятия\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Field\r\n                  name={\"online\"}\r\n                  id=\"online\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Дистанционное\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n        \r\n\r\n\r\n         \r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\r\n                  Цена\r\n        </Typography>\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Field\r\n                   name={\"paid\"}\r\n                   id=\"paid\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Платное\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n         \r\n            <Grid container spacing={0}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography align=\"left\" component=\"h1\" variant=\"h6\">\r\n                  Вид мероприятия\r\n        </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                 name={\"hackathon\"}\r\n                 id=\"hackathon\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"hak\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Хакатон\"\r\n                />\r\n\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"conference\"}\r\n                  id=\"conference\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"semin\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Конференция\"\r\n                />\r\n              </Grid>\r\n             \r\n\r\n              <Grid item xs={10} sm={6} >\r\n                <Field\r\n                  name={\"forum\"}\r\n                  id=\"forum\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"konf\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Форум\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"webinar\"}\r\n                  id=\"webinar\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"onl\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Вебинар\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"meetup\"}\r\n                  id=\"meetup\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"sta\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Meet up\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"master\"}\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"for\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Мастер-класс\"\r\n                  id=\"master\"\r\n                />\r\n              </Grid>\r\n             \r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"onlinecourse\"}\r\n                  id=\"onlinecourse\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"webin\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Онлайн-курс\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"vystav\"}\r\n                  id=\"vystav\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"vystav\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Выставка\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={6}>\r\n                <Field\r\n                  name={\"sorevnovan\"}\r\n                  id=\"sorevnovan\"\r\n                  component={renderCheckbox}\r\n                  control={<Checkbox value=\"tren\" size=\"small\" color=\"secondary\" />}\r\n                  label=\"Соревнование\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n         \r\n\r\n\r\n          <div className={classes.buttonsSide}>\r\n            <Typography\r\n              align=\"left\">\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\" >Применить</Button>\r\n            </Typography>\r\n          </div>\r\n\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n})\r\n\r\n let list=[];\r\n\r\nconst  Sidebar = (props) => {\r\n\r\n  const Submit = (app) => (data) => {\r\n\r\n    let list=[];\r\n\r\n\r\n    if (data.online===true)\r\n      list.push('online')\r\n    \r\n\r\n    if (data.paid===true)\r\n      list.push('paid')\r\n\r\n\r\n    if (data.hackathon===true)\r\n      list.push('хакатон')\r\n\r\n    if (data.vystav===true)\r\n      list.push('выставка')\r\n\r\n    if (data.forum===true)\r\n      list.push('форум')\r\n    \r\n    if (data.webinar===true)\r\n      list.push('вебинар')\r\n\r\n    if (data.master===true)\r\n      list.push('мастер-класс')\r\n\r\n    if (data.sorevnovan===true)\r\n      list.push('соревнование')\r\n\r\n    if (data.meetup===true)\r\n      list.push('митап')\r\n\r\n    if (data.onlinecourse===true)\r\n      list.push('курс')\r\n\r\n    if (data.conference===true)\r\n      list.push('конференция')\r\n\r\n      \r\n    app(localStorage.getItem('token'), list)\r\n  }\r\n\r\n  return(\r\n\r\n    <Filter onSubmit={Submit(props.setLenta)}/>\r\n  );\r\n}\r\n\r\nconst lentaStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser\r\n})\r\n\r\n\r\nexport default connect(lentaStateProps, {setLenta})(Sidebar)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Check, CheckBox } from '@material-ui/icons';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport {setCard} from './../../../reducers/userReducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Grid, Hidden } from '@material-ui/core';\r\nimport  {Link}  from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 280,\r\n    height: 310,\r\n\r\n  },\r\n  media: {\r\n    height: 240,\r\n    paddingTop: '56.25%',\r\n     // 16:9\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n    marginbottom: theme.spacing(3),\r\n    //display: block,\r\n    height: 100,\r\n    }\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  box: {\r\n    //widht: 280,\r\n    height: 70, \r\n   // textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    content:\"...\",\r\n   // display: inline-block,\r\n    //position: absolute,\r\n    //whiteSpace: 'nowrap',\r\n    //whiteSpace: 'nowrap',\r\n  \r\n    \r\n  },\r\n}));\r\n\r\nconst Cardform = reduxForm({form: \"card\"})((props)=>{\r\n  const classes = useStyles();\r\n\r\n\r\n  return(\r\n      <form className={classes.form} >\r\n\r\n        <CardActionArea  component={Link} to={\"/event/\"+props.id} >\r\n            <CardMedia\r\n              component=\"img\"\r\n              //alt=\"Contemplative Reptile\"\r\n              height=\"170\"\r\n              image={props.image_url}\r\n              //title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              \r\n              <Typography gutterBottom /*noWrap**/  className={classes.box} display=\"block\" variant=\"h5\" component=\"h2\" >\r\n                {props.title}\r\n              </Typography>\r\n        \r\n              <Typography variant=\"body2\" color=\"textSecondary\" >\r\n                {props.short_info}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n\r\n\r\n        </form>\r\n        )\r\n    })\r\n\r\n  const Submit = (app, currentUser, id) => (data) => {\r\n    app(currentUser, id)\r\n    debugger\r\n    \r\n  }\r\n\r\nconst CardEvent = (props) => {\r\n  const classes = useStyles();\r\n \r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n\r\n      <Cardform short_info={props.short_info} \r\n       image_url={props.image_url} \r\n       title={props.title} \r\n       id={props.id}\r\n        /*onSubmit={Submit(props.setCard, localStorage.getItem('token'), props.id)}*//>\r\n\r\n      <CardActions /*disableSpacing*/>\r\n      \r\n      </CardActions>\r\n     \r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapCardStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card: state.user.Card,\r\n})\r\n\r\nexport default connect(mapCardStateProps, {setCard})(CardEvent)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport CardEvent from './cardevent';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Events = (props) => {\r\n  //const { events } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3} className={classes.mainGrid}>\r\n          <Grid container item xs={9} spacing={3}>\r\n            {props.lenta.map((event) => (\r\n\r\n              <Grid item xs={3} sm={4} key={event._id}>\r\n              <CardEvent title={event.title}  image_url={\"https://source.unsplash.com/random/?programming,it,\"+event.title}\r\n              short_info= {event.startDate}  id={event._id}>\r\n              </CardEvent>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Grid container item xs={3} sm={3} md={3}>\r\n            <Sidebar date={\"fgf\"} format={\"fgbfn\"} where={\"mk\"} price={\"kjbjh\"} time={\"jhbjh\"} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapLentaStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  lenta: state.user.lenta,\r\n})\r\n\r\nexport default connect(mapLentaStateProps, {})(Events)\r\n\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Header from './Header';\r\nimport Events from './Events';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {setLenta} from './../../../reducers/userReducer'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nconst sections = [\r\n  { title: 'Конференции', url: '#' },\r\n  { title: 'Хакатоны', url: '#' },\r\n  { title: 'Вебинары', url: '#' },\r\n  { title: 'Форумы', url: '#' },\r\n  { title: 'Онлайн-курсы', url: '#' },\r\n  { title: 'Стажировки', url: '#' },\r\n  { title: 'Семинары', url: '#' },\r\n  { title: 'Лекции', url: '#' },  \r\n];\r\n\r\nconst events = [\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\r\n    short_info: \"24 октября 9:30\",\r\n  },\r\n  {\r\n    title: \"Кейс-чемпионат\",\r\n    image_url: \"https://source.unsplash.com/random/?programming\",\r\n    short_info: \"24 октября 18:00\",\r\n  },\r\n  {\r\n    title: \"QA online meetup\",\r\n    image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n    short_info: \"25 октября 16:30\",\r\n  },\r\n  {\r\n    title: \"Стажировка\",\r\n    image_url: \"https://source.unsplash.com/random/?science\",\r\n    short_info: \"26 октября 9:30\",\r\n  },\r\n  {\r\n    title: \"DevOps тренинг\",\r\n    image_url: \"https://source.unsplash.com/random/?computer\",\r\n    short_info: \"26 октября 15:00\",\r\n  },\r\n  {\r\n    title: \"Big Data Days 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?it,event,programming\",\r\n    short_info: \"27 октября 10:00\",\r\n  },\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n    short_info: \"27 октября 16:00\",\r\n  },\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?event,it\",\r\n    short_info: \"28 октября 18:30\",\r\n  },\r\n  {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://source.unsplash.com/random/?event,programming\",\r\n    short_info: \"28 октября 19:30\",\r\n  },\r\n];\r\n\r\nconst Blog = (props) => {\r\n\r\n  const events = //props.card;\r\n  [\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\r\n      short_info: \"24 октября 9:30\",\r\n    },\r\n    {\r\n      title: \"Кейс-чемпионат\",\r\n      image_url: \"https://source.unsplash.com/random/?programming\",\r\n      short_info: \"24 октября 18:00\",\r\n    },\r\n    {\r\n      title: \"QA online meetup\",\r\n      image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n      short_info: \"25 октября 16:30\",\r\n    },\r\n    {\r\n      title: \"Стажировка\",\r\n      image_url: \"https://source.unsplash.com/random/?science\",\r\n      short_info: \"26 октября 9:30\",\r\n    },\r\n    {\r\n      title: \"DevOps тренинг\",\r\n      image_url: \"https://source.unsplash.com/random/?computer\",\r\n      short_info: \"26 октября 15:00\",\r\n    },\r\n    {\r\n      title: \"Big Data Days 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?it,event,programming\",\r\n      short_info: \"27 октября 10:00\",\r\n    },\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?programming,it\",\r\n      short_info: \"27 октября 16:00\",\r\n    },\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?event,it\",\r\n      short_info: \"28 октября 18:30\",\r\n    },\r\n    {\r\n      title: \"Directum Day 2020\",\r\n      image_url: \"https://source.unsplash.com/random/?event,programming\",\r\n      short_info: \"28 октября 19:30\",\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Header sections={sections} />\r\n        <main>\r\n          <Events events={events} />\r\n        </main>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapcardStateProps = (state) => ({\r\n  isLog: state.user.isLog,\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser\r\n})\r\n\r\nexport default connect(mapcardStateProps, {})(Blog)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Blog from './Blog';\r\nimport {setLenta} from './../../../reducers/userReducer'\r\n\r\nclass lenta extends React.Component{\r\n\r\n  componentDidMount(){\r\n    this.props.setLenta(localStorage.getItem('token'), false);\r\n  }\r\n  render(){\r\n  return (\r\n    <Blog />\r\n  );\r\n  }\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  lenta: state.user.lenta,\r\n  interests: state.user.interests\r\n})\r\n\r\nexport default connect(mapStateProps, {setLenta})(lenta)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport {setlk} from './../../../reducers/userReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n    overflowX: 'auto',\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    align: 'right'\r\n  },\r\n}));\r\n\r\nconst ButtonLK = reduxForm({form: \"lk\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  >\r\n    <Button variant=\"outlined\" component={Link} to=\"/Anketa\" color=\"default\"  className={classes.button} size=\"medium\" >\r\n          Личный кабинет   \r\n    </Button>\r\n  </form>\r\n  )\r\n})\r\n\r\nconst ButtonEvent = reduxForm({form: \"event\"})((props)=>{\r\n  const classes = useStyles();\r\n  return(\r\n    <form  >\r\n    <Button size=\"medium\"  component={Link} to=\"/lenta\" color=\"default\" type=\"submit\"> \r\n          <Typography\r\n       \r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            IT Events\r\n          </Typography>\r\n          </Button>   \r\n  </form>\r\n  )\r\n})\r\n\r\nconst Headers = (props) => {\r\n  const classes = useStyles();\r\n  \r\n    const SubmitButtonLK = (app) => (data) => {\r\n    app(false, localStorage.getItem('token'))}\r\n\r\n    const SubmitButtonEvent = (app) => (data) => {\r\n        app(true, localStorage.getItem('token'))\r\n    }\r\n\r\n    if (props.LK){\r\n        debugger\r\n        //props.LK=false;\r\n        return <Redirect to=\"/Anketa\"/>\r\n    }\r\n    else if (props.isEv){\r\n      debugger\r\n      return <Redirect to=\"/lenta\"/>\r\n    }\r\n    debugger\r\n    return (\r\n      <React.Fragment>\r\n        <Toolbar className={classes.toolbar}>\r\n\r\n        <ButtonEvent /*onSubmit={SubmitButtonEvent(props.setlk)}*/ />\r\n        \r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            \r\n          </Typography>\r\n        \r\n        {\r\n          localStorage.getItem('token') ? <ButtonLK /*onSubmit={SubmitButtonLK(props.setlk)}*//> : \r\n          <Button variant=\"outlined\" color=\"default\" size=\"medium\" className={classes.button}  component={Link} to=\"/welcome\">\r\n          Войти\r\n          </Button>\r\n        }\r\n         \r\n\r\n         \r\n\r\n        </Toolbar>\r\n        \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nconst maplkStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  isPost: state.user.isPost,\r\n  isGet: state.user.isGet,\r\n  isExit: state.user.isExit,\r\n  isEvent: state.user.isEvent,\r\n  Ind: state.user.Ind,\r\n  LK: state.user.LK,\r\n  isLog: state.user.isLog,\r\n  isEv: state.user.isEv,\r\n})\r\n\r\nexport default connect(maplkStateProps, {setlk})(Headers)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 40,\r\n    height: 40,\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"center\"\r\n      \r\n      \r\n    },\r\n    margin: theme.spacing(1),\r\n    alignItems: 'right',\r\n    alignSelf: \"end\",\r\n    Align: \"right\",\r\n    position: 'right',\r\n\r\n\r\n  },\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      alignItems: 'right',\r\n      alignSelf: \"end\",\r\n      textAlign: \"right\"\r\n      \r\n    },\r\n  },\r\n}));\r\nconst MainFeaturedPost= (props) => {\r\n  const classes = useStyles();\r\n \r\n  return (\r\n    <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(${props.image_url})` }}>\r\n      {<img style={{ display: 'none' }} src={props.image_url} />}\r\n      <div className={classes.overlay} />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <div className={classes.mainFeaturedPostContent}>\r\n            <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" >\r\n              {props.title}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n              {props.short_info}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.buttonsSide}>\r\n          <div className={classes.buttonsSide}>\r\n      \r\n\r\n            \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card\r\n})\r\n\r\nexport default connect(mapStateProps, {})(MainFeaturedPost)\r\n","import React from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst styles = (theme) => ({\r\n  listItem: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'h5',\r\n      },\r\n    },\r\n    h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\r\n    h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\r\n    h4: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'caption', paragraph: true },\r\n    },\r\n    p: { component: Typography, props: { paragraph: true } },\r\n    a: { component: Link },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      )),\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Markdown(props) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Markdown from './Markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n  const { posts} = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={8}>\r\n      <Divider />\r\n      {posts.map((post) => (\r\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\r\n          {post}\r\n        </Markdown>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport GradeRoundedIcon from '@material-ui/icons/GradeRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport cardevent from '../../lenta/src/cardevent';\r\nimport { Card } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  sidebarAbout: {\r\n    backgroundColor: theme.palette.grey[200],  \r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n\r\n  buttonsSide: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper elevation={3} className={classes.sidebarAboutBox}>\r\n        <Typography variant=\"h6\" className={classes.sidebarAbout} gutterBottom>\r\n          {\"Информация о событии\"}\r\n        </Typography>\r\n\r\n\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <TodayIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Начало мероприятия\" secondary={props.Card.startDate} />\r\n        </ListItem>\r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <TodayIcon />\r\n          </ListItemIcon>\r\n          { props.Card.endDate ? \r\n           <ListItemText primary=\"Конец мероприятия\" secondary={props.Card.endDate} />\r\n          :\r\n          <ListItemText primary=\"Конец мероприятия\" secondary={props.Card.startDate} /> \r\n          }\r\n         \r\n        </ListItem>\r\n\r\n       \r\n\r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <RoomOutlinedIcon />\r\n          </ListItemIcon>\r\n          { props.Card.tags ? props.Card.tags[0]===('online') ? \r\n          <ListItemText primary=\"Место\" secondary={props.Card.tags[0]} />\r\n          :\r\n          <ListItemText primary=\"Место\" secondary={props.Card.location} /> \r\n          : null}\r\n          </ListItem> \r\n        <ListItem >\r\n          <ListItemIcon>\r\n            <MonetizationOnOutlinedIcon />\r\n          </ListItemIcon>\r\n          { props.Card.tags ? props.Card.tags[2]===('paid') ? \r\n          <ListItemText primary=\"Стоимость\" secondary=\"Paid\" />\r\n          :\r\n          <ListItemText primary=\"Стоимость\" secondary=\"Free\" /> \r\n          : 0}\r\n         \r\n        </ListItem>\r\n\r\n      </List>\r\n\r\n\r\n      </Paper>  \r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapbarStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card,\r\n})\r\n\r\nexport default connect(mapbarStateProps, {})(Sidebar)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MainFeaturedPost from './MainFeaturedPost';\r\nimport Main from './Main';\r\nimport Sidebar from './Sidebar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Markdown from './text'\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardContent, Divider } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Event= (props) => {\r\n  const classes = useStyles();\r\n\r\n//let posts = props.Card.description;\r\n  return (\r\n    <React.Fragment>\r\n      <MainFeaturedPost title={props.Card.title} id={props.Card._id} image_url={\"https://source.unsplash.com/random/?programming,it,\"+props.Card.title}  />\r\n\r\n      <Grid container spacing={5} className={classes.mainGrid}>\r\n          <Grid item xs={12} md={8}>\r\n          <Divider />\r\n          <Typography gutterBottom className={classes.markdown}  variant=\"overline\" component=\"h2\" >\r\n                {props.Card.description}\r\n              </Typography>\r\n        </Grid>\r\n       <Sidebar date={props.Card.startDate}  where={props.Card.tags} price={props.Card.tags} /> \r\n        \r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  interests: state.user.interests,\r\n  lenta: state.user.lenta,\r\n  iscard: state.user.iscard,\r\n  Card:  state.user.Card,\r\n})\r\n\r\nexport default connect(mapStateProps, {})(Event)","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Headers from './Headers';\r\nimport Event from './Event';\r\nimport { connect } from 'react-redux';\r\n\r\nconst sections = [\r\n  { title: 'Конференции', url: '#' },\r\n  { title: 'Хакатоны', url: '#' },\r\n  { title: 'Вебинары', url: '#' },\r\n  { title: 'Форумы', url: '#' },\r\n  { title: 'Онлайн-курсы', url: '#' },\r\n  { title: 'Стажировки', url: '#' },\r\n  { title: 'Семинары', url: '#' },\r\n  { title: 'Лекции', url: '#' },  \r\n];\r\n\r\nconst Blog=(props)=>{\r\n\r\nconst event = {\r\n    title: \"Directum Day 2020\",\r\n    image_url: \"https://izhlife.ru/uploads/posts/newsimg/imgs-1523947921.jpg\",\r\n    short_info: \"3 часа о самых актуальных кейсах. Авторитетные эксперты. Все, что нужно знать, чтобы выстроить эффективное взаимодействие сотрудников, повысить устойчивость компании и уверенно работать в любых условиях.\",\r\n    full_info: \"a\",\r\n    date: \"22 октября 2020\",\r\n    format: \"b\",\r\n    where: \"г. Санкт Петербург ул. проспект Просвещения дом 13 офис 405 \",\r\n    price: \"Бесплатно\",\r\n    time: \"9:30\"\r\n};\r\n\r\n    //props.LK=false;\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Headers sections={sections} />\r\n        <main>\r\n          <Event event={event} />\r\n        </main>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n  \r\n}\r\nconst mapcardStateProps = (state) => ({\r\n  isLog: state.user.isLog,\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  Card: state.user.Card,\r\n})\r\n\r\nexport default connect(mapcardStateProps, {})(Blog)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Blogs from './Blogs';\r\nimport {setCard} from './../../../reducers/userReducer'\r\n\r\nclass event extends React.Component{\r\n\r\n   componentDidMount(){\r\n    //super(props);\r\n    //let id=window.location.pathname.slice(7);\r\n    //let m=localStorage.getItem('token');\r\n   this.props.setCard(localStorage.getItem('token'), window.location.pathname.slice(7));\r\n    \r\n  }\r\n    \r\n  render(){\r\n  \r\n        return (\r\n        <Blogs /> \r\n        );\r\n    \r\n  }\r\n}\r\n\r\nconst mapStateProps = (state) => ({\r\n  message: state.user.message,\r\n  currentUser: state.user.currentUser,\r\n  lenta: state.user.lenta,\r\n  interests: state.user.interests,\r\n  Card: state.user.Card,\r\n  iscard: state.user.iscard,\r\n})\r\n\r\nexport default connect(mapStateProps, {setCard})(event)","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\nimport SignUp from './Signup';\r\nimport anketa from './Anketaf';\r\nimport lenta from './lenta/src/index';\r\nimport event from './event/src/index';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/welcome' component={Login}/>\r\n        <Route path='/Signup' component={SignUp} />\r\n        <Route path='/Anketa' component={anketa} />\r\n        \r\n\r\n        <Route path='/lenta' component={lenta} />\r\n        <Route path='/event' component={event} />\r\n\r\n        <Route path='/' component={lenta} />\r\n\r\n      \r\n        <Redirect to='/' component={lenta}/>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ScreenRotation } from \"@material-ui/icons\";\r\n\r\nconst defaultState= {\r\n\r\n}\r\n\r\nexport default function fileReducer(state=defaultState, action){\r\n    switch(action.type){\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport fileReducer from \"./FileReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport {reducer} from \"redux-form\"\r\n\r\nconst rootReducer = combineReducers( {\r\n    form: reducer,\r\n    user: userReducer,\r\n    files: fileReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./reducers\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n   \r\n    document.getElementById('root')\r\n );\r\n\r\n\r\n\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}